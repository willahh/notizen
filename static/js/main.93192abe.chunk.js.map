{"version":3,"sources":["../../common/assets/notizen.svg","../../common/assets/notizen-dark.svg","../../common/api/notizenAPI.ts","../../common/constants.ts","../../common/interfaces/INote.interface.ts","../../common/features/note/noteListSlice.ts","../../common/app/utils.ts","../../common/features/tags/TagsSlice.ts","../../common/app/rootReducer.ts","../../common/app/store.ts","serviceWorker.js","../../common/components/NoteItemThumb.tsx","../../common/components/NoteFilter.tsx","../../common/features/tags/Tag.tsx","../../common/features/tags/Tags.tsx","../../common/components/UserProfileCard.tsx","../../common/components/SidebarDesktop.tsx","../../common/components/Logo.tsx","../../common/components/Menu.tsx","../../common/components/SidebarClose.tsx","../../common/components/UserProfileCardMobile.tsx","../../common/components/MenuMobile.tsx","../../common/components/MainTemplate.tsx","../../common/components/Toolbar.tsx","../../common/features/note/NoteThumb.tsx","../../common/components/NoteItem.tsx","../../common/components/AreaSecondary.tsx","../../common/components/MainArea.tsx","../../common/components/TagIcon.tsx","../../common/components/NewTag.tsx","../../common/components/NoteTags.tsx","../../common/components/NoteDetailEdit.tsx","../../common/features/note/NoteList.tsx","../../common/assets/notizen-icon.svg","../../common/features/auth/Auth.tsx","../../common/app/App.tsx","../../common/features/note/Note.tsx","index.tsx"],"names":["API_URL","withDebug","url","debug","debugThrowError","a","includes","withUrl","console","log","getNotes","axios","get","notesReponse","noteAcc","notes","data","reduce","m","note","id","getNoteDetailedByNoteId","noteId","response","createNote","createNoteDTO","post","deleteNote","delete","error","updateNote","updateNoteDTO","patch","createTagAndAddToNote","noteActionDTO","tag","addTagToNote","removeTagToNote","getTags","tagsResponse","tagsAcc","tags","createTag","createTagDto","updateTag","tagId","updateTagDto","deleteTag","NoteAction","TagIcon","TagColor","NoteColor","Mode","LOCAL_STORAGE_NOTES_KEY","notesInitialData","localStorageData","window","localStorage","getItem","JSON","parse","getNotesFromLocalStorage","initialNotesState","isLoading","notesCache","selectedNoteId","setSelectedNoteId","createAction","payload","fetchNoteThunk","createAsyncThunk","fetchNotes","thunkAPI","deleteNoteThunk","createNoteThunk","addNoteLocalAction","updateNoteThunk","UpdateNoteDTO","serverSync","noteDetailResultPromise","Promise","resolve","reject","createTagAndAddToNoteAction","addTagToNoteAction","removeTagToNoteAction","createSlice","name","initialState","extraReducers","builder","addCase","state","action","pending","meta","arg","newNotes","fulfilled","rejected","Object","keys","length","newNote","noteCached","reducers","hashCode","str","i","hash","charCodeAt","HOST_URL","location","host","mapOfKeyValueToArrayOfMap","acc","v","push","sort","b","Number","initialTagsState","undefined","selectedTagId","tagsCache","deleteModeActive","editModeActive","mode","Default","fetchTags","setTagModeAction","setMode","updateTagLocal","updateTagVisibilityInFilterDropdownLocal","visible","resetUpdateTag","createTagAction","addTagActionLocal","updateTagAction","deleteTagAction","requestId","tempTagId","createDate","Date","updateDate","isActive","icon","default","color","visibleInFilterDropdown","k","String","newTag","newTags","rootReducer","combineReducers","notesReducer","tagsReducer","store","configureStore","reducer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","NoteItemThumb","text","title","useDispatch","className","useSelector","tagColorClassName","Math","round","random","style","fontSize","NoteFilter","htmlFor","type","placeholder","x-description","xmlns","viewBox","fill","aria-hidden","fillRule","d","clipRule","TagComponent","tagMode","dispatch","tagComponent","href","onDoubleClick","Edit","stroke","strokeLinecap","strokeLinejoin","strokeWidth","onClick","e","stopPropagation","Delete","value","autoFocus","onChange","updatedTag","target","onBlur","onKeyDown","keyCode","Tags","tagsList","useEffect","warn","createTagAndEditAction","TransitionGroup","component","map","CSSTransition","timeout","classNames","UserProfileCard","src","alt","SidebarDesktop","useState","matchMedia","matches","isColorSchemeDark","setColorSchemeDark","list","handler","addListener","removeListener","logoSrc","require","width","aria-label","label","selected","Logo","logo","Menu","SidebarClose","UserProfileCardMobile","MenuMobile","tabIndex","MainTemplate","children","Toolbar","floor","content","height","aria-haspopup","role","aria-orientation","aria-labelledby","display","to","activeClassName","NoteThumb","setItem","stringify","notesList","noteListHtml","useRouteMatch","isSelected","NoteItem","itemCls","itemInnerCls","toLowerCase","num","zIndex","note-id","dateTime","slice","AreaSecondary","inProp","setInProp","in","MainArea","tagIconColorMap","gray","red","yellow","green","blue","indigo","purple","pink","noteIconColorMap","tagIconIconMap","hashtag","NewTag","isDropdownOpen","setIsDropDownOpen","tagsFromReduxState","tagsArray","setTags","filterText","setFilterText","filterList","dropdownRef","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","inputFilterRef","focus","regex","RegExp","tagsFiltered","filter","tagOptionHtml","tagIcon","tagIconColor","ref","currentTarget","relatedTarget","DEFAULT","aria-expanded","actionType","CreateTagAndAddToNote","tagName","visibility","AddTag","RemoveTag","handleClickItem","NoteTags","noteTags","isColorDropDownOpen","setIsColorDropDownOpen","dropdownColorRef","firstDropDownColorItemRef","getTagClassName","index","noteClassName","noteColor","noteColorCSS","marginLeft","marginRight","unmountOnExit","icon-color","iconColor","getAttribute","isFav","cx","cy","r","NoteDetailEdit","contentRef","titleRef","innerText","contentEditable","dangerouslySetInnerHTML","__html","NoteList","Auth","loginBackgroundImage","method","autoComplete","required","routes","path","Component","exact","App","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","checkValidServiceWorker","ready"],"mappings":"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","file":"static/js/main.93192abe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notizen.76baddb4.svg\";","export default __webpack_public_path__ + \"static/media/notizen-dark.de4a63eb.svg\";","/**\n * API related functions here.\n *\n * TODO: There is a symmetry between the functions in this namespace and the backend API controller methods.\n * When a new backend service is added, a new controller method is added to to expose the service,\n * then the frontend need to expose this service too.\n * Maybe there is something to do to avoid this \"duplication\".\n */\n\nimport axios from 'axios';\nimport {\n  Notes,\n  UpdateNoteDTO,\n  CreateNoteDTO,\n  INote,\n  NoteDetailResult,\n  NotesResult,\n  TagsResult,\n  Tag,\n  Tags,\n  updateTagDto,\n  TagResult,\n  createTagDto,\n  NoteActionDto,\n  CreateTagAndAddToNoteResult,\n  // AddTagToNoteResult,\n  // RemoveTagToNoteResult,\n} from '../interfaces/INote.interface';\n\n/* ----------------- debug ------------------------- */\nconst DEBUG = false;\n\n// TODO: use a .env to manage environments\nconst API_URL = 'http://localhost:3000';\n// const API_URL = 'https://notizenapp-306803.ew.r.appspot.com';\nconst withDebug = (url: string, debug: boolean, debugThrowError: boolean) => {\n  if (debug) {\n    const a = url.includes('?') ? '&' : '?';\n    url += a + 'debug=true' + (debugThrowError ? '&debugThrowError=true' : '');\n  }\n  return url;\n};\nconst withUrl = (url: string, debugThrowError: boolean = false) => {\n  console.log('withUrl', debugThrowError);\n\n  return withDebug(url, DEBUG, debugThrowError);\n};\n\n/* ----------------- note ------------------------- */\nexport async function getNotes(): Promise<NotesResult> {\n  const url = withUrl(`${API_URL}/notes?limit=100`);\n  try {\n    const notesReponse = await axios.get<INote[]>(url);\n    const noteAcc: Notes = {};\n    const notes = notesReponse.data.reduce((m, note) => {\n      m[note.id] = note;\n      return m;\n    }, noteAcc);\n\n    return {\n      notes: notes,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getNoteByNoteId(\n  noteId: string\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}`);\n  try {\n    const notesReponse = await axios.get<INote>(url);\n    return {\n      note: notesReponse.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getNoteDetailedByNoteId(\n  noteId: string\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}/detailed`);\n  try {\n    const response = await axios.get<INote>(url);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function createNote(\n  createNoteDTO: CreateNoteDTO\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes`);\n  try {\n    const response = await axios.post<INote>(url, createNoteDTO);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function deleteNote(noteId: string): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}`);\n  try {\n    const response = await axios.delete<INote>(url);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    console.error('Une erreur est survenue', err);\n    throw err;\n  }\n}\n\nexport async function updateNote(\n  noteId: number,\n  updateNoteDTO: UpdateNoteDTO\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}`);\n  try {\n    const response = await axios.patch<INote>(url, updateNoteDTO);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function createTagAndAddToNote(\n  noteActionDTO: NoteActionDto\n): Promise<CreateTagAndAddToNoteResult> {\n  console.log('createTagAndAddToNote', noteActionDTO);\n\n  const { noteId } = noteActionDTO;\n  const url = withUrl(`${API_URL}/notes/${noteId}/actions`);\n  try {\n    const response = await axios.post<CreateTagAndAddToNoteResult>(\n      url,\n      noteActionDTO\n    );\n    return {\n      note: response.data.note,\n      tag: response.data.tag,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function addTagToNote(\n  noteActionDTO: NoteActionDto\n): Promise<NoteDetailResult> {\n  console.log('addTagToNote', noteActionDTO);\n\n  const { noteId } = noteActionDTO;\n  const url = withUrl(`${API_URL}/notes/${noteId}/actions`);\n  try {\n    const response = await axios.post<INote>(url, noteActionDTO);\n    const note = response.data;\n    return {\n      note: note,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function removeTagToNote(\n  noteActionDTO: NoteActionDto\n): Promise<NoteDetailResult> {\n  console.log('removeTagToNote', noteActionDTO);\n\n  const { noteId } = noteActionDTO;\n  const url = withUrl(`${API_URL}/notes/${noteId}/actions`);\n  try {\n    const response = await axios.post<INote>(url, noteActionDTO);\n    const note = response.data;\n    return {\n      note: note,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\n/* ----------------- tags ------------------------- */\nexport async function getTags(): Promise<TagsResult> {\n  const url = withUrl(`${API_URL}/tags?limit=100`);\n\n  try {\n    const tagsResponse = await axios.get<Tag[]>(url);\n    const tagsAcc: Tags = {};\n    const tags = tagsResponse.data.reduce((m, tag) => {\n      m[tag.id] = tag;\n      return m;\n    }, tagsAcc);\n\n    return {\n      tags: tags,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function createTag(\n  createTagDto: createTagDto\n): Promise<TagResult> {\n  const url = withUrl(`${API_URL}/tags/`, true);\n  try {\n    const response = await axios.post<Tag>(url, createTagDto);\n    return {\n      tag: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function updateTag(\n  tagId: number,\n  updateTagDto: updateTagDto\n): Promise<TagResult> {\n  const url = withUrl(`${API_URL}/tags/${tagId}`);\n  try {\n    const response = await axios.patch<Tag>(url, updateTagDto);\n    return {\n      tag: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function deleteTag(tagId: number): Promise<TagResult> {\n  const url = withUrl(`${API_URL}/tags/${tagId}`, true);\n  try {\n    const response = await axios.delete(url);\n    return {\n      tag: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n","export const LOCAL_STORAGE_NOTES_KEY = 'notizen-notes';","/**\n * Interfaces should be shared between frontend and backend (domain ?).\n * https://stackoverflow.com/questions/59571680/react-backend-project-structure-when-sharing-code\n */\n\n// Notes ------------------------\n// TODO: Share with backend\nexport interface INote {\n  id: string;\n  name?: string;\n  content?: string;\n  createDate: Date;\n  updateDate: Date;\n  tags: Tag[];\n  isFav: boolean;\n  color: NoteColor\n}\n\nexport interface Notes {\n  [key: string]: INote;\n}\n\nexport interface NoteDetailResult {\n  note: INote;\n}\n\nexport interface CreateTagAndAddToNoteResult {\n  note: INote;\n  tag: Tag\n}\n\n\nexport interface NotesResult {\n  notes: Notes;\n}\n\n// TODO: Share with the backend\nexport interface UpdateNoteDTO {\n  name?: string;\n  content?: string;\n  isFav?: boolean;\n  color?: NoteColor;\n}\n\n// TODO: Share with the backend\nexport interface CreateNoteDTO {\n  name?: string;\n  content?: string;\n}\n\n// TODO: Share with the backend\nexport enum NoteAction {\n  AddTag = 'ADD_TAG',\n  RemoveTag = 'REMOVE_TAG',\n  CreateTagAndAddToNote = 'CREATE_TAG_AND_TO_NOTE'\n}\n\n// TODO: Share with the backend\nexport interface NoteActionDto {\n  actionType: NoteAction;\n  noteId: number;\n  tagName?: string;\n  tagId?: number;\n}\n\n// Tag ------------------------\n// TODO: Share with backend\nexport enum TagIcon {\n  default = 'DEFAULT',\n  tag = 'TAG',\n  hashtag = 'HASHTAG',\n}\n\n// TODO: Share with backend\nexport enum TagColor {\n  default = 'GRAY',\n  gray = 'GRAY',\n  red = 'RED',\n  yellow = 'YELLOW',\n  green = 'GREEN',\n  blue = 'BLUE',\n  indigo = 'INDIGO',\n  purple = 'PURPLE',\n  pink = 'PINK',\n}\n\n// TODO: Share with backend\nexport enum NoteColor {\n  default = 'GRAY',\n  gray = 'GRAY',\n  red = 'RED',\n  yellow = 'YELLOW',\n  green = 'GREEN',\n  blue = 'BLUE',\n  indigo = 'INDIGO',\n  purple = 'PURPLE',\n  pink = 'PINK',\n}\n\n// TODO: Share with backend\nexport interface TagEntity {\n  id: number;\n  name: string;\n  isActive: boolean;\n  createDate: Date;\n  updateDate: Date;\n  icon: TagIcon;\n  color: TagColor;\n  // noteId?: string;\n}\n\nexport enum Mode {\n  Default = 'DEFAULT',\n  Edit = 'EDIT',\n  Delete = 'DELETE',\n}\n\nexport interface Tag extends TagEntity {\n  mode: Mode;\n  icon: TagIcon;\n  color: TagColor;\n  visibleInFilterDropdown: boolean;\n}\n\nexport interface Tags {\n  [key: string]: Tag;\n}\n\nexport interface TagsResult {\n  tags: Tags;\n}\n\nexport interface TagResult {\n  tag: Tag;\n}\n\nexport interface updateTagDto {\n  name: string;\n}\n\nexport interface createTagDto {\n  name: string;\n}\n","import {\n  createSlice,\n  PayloadAction,\n  createAsyncThunk,\n  createAction,\n} from '@reduxjs/toolkit';\nimport {\n  createNote,\n  deleteNote,\n  getNoteByNoteId,\n  getNoteDetailedByNoteId,\n  getNotes,\n  createTagAndAddToNote,\n  updateNote,\n  addTagToNote,\n  removeTagToNote,\n} from '../../api/notizenAPI';\nimport {\n  NoteDetailResult,\n  CreateNoteDTO,\n  UpdateNoteDTO,\n  NoteActionDto,\n  INote,\n} from '../../interfaces/INote.interface';\nimport { LOCAL_STORAGE_NOTES_KEY } from '../../constants';\nimport { Notes } from '../../interfaces/INote.interface';\n\n// TODO: See https://codesandbox.io/s/ihttc?file=/src/app/store.ts\n// and https://github.com/jerrynavi/diaries-app/tree/master/src/features\n\ninterface NoteListState {\n  isLoading: boolean;\n  error: string | null;\n  notes: Notes;\n  notesCache: Notes;\n  selectedNoteId: string | null;\n}\n\nconst getNotesFromLocalStorage = () => {\n  const localStorageData = window.localStorage.getItem(LOCAL_STORAGE_NOTES_KEY);\n  return localStorageData ? JSON.parse(localStorageData) : {};\n};\nconst notesInitialData = getNotesFromLocalStorage();\n\nconst initialNotesState: NoteListState = {\n  isLoading: false,\n  error: null,\n  notes: notesInitialData,\n  notesCache: notesInitialData,\n  selectedNoteId: null,\n};\n\nexport const setSelectedNoteId = createAction(\n  'notes/setSelectedNoteId',\n  (noteId: string) => {\n    return {\n      payload: {\n        selectedNoteId: noteId,\n      },\n    };\n  }\n);\n\nexport const fetchNoteThunk = createAsyncThunk(\n  'notes/note',\n  async (noteId: string) => {\n    console.log('fetchNote', noteId);\n    // return await getNoteByNoteId(noteId);\n    return await getNoteDetailedByNoteId(noteId);\n  }\n);\n\nexport const fetchNotes = createAsyncThunk('notes/fetch', async (thunkAPI) => {\n  return await getNotes();\n});\n\nexport const deleteNoteThunk = createAsyncThunk(\n  'notes/delete',\n  async (noteId: string) => {\n    console.log('deleteNote new');\n    return await deleteNote(noteId);\n  }\n);\n\nexport const createNoteThunk = createAsyncThunk(\n  'notes/create',\n  async (createNoteDTO: CreateNoteDTO) => {\n    console.log('createNoteThunk', createNoteDTO);\n    return await createNote(createNoteDTO);\n  }\n);\n\nexport const addNoteLocalAction = createAction(\n  'tags/addNoteLocalAction',\n  (note: INote) => {\n    return {\n      payload: {\n        note: note,\n      },\n    };\n  }\n);\n\nexport const updateNoteThunk = createAsyncThunk(\n  'notes/update',\n  async ({ noteId, updateNoteDTO: UpdateNoteDTO, serverSync }: any) => {\n    console.log('updateNoteThunk', noteId, UpdateNoteDTO, serverSync);\n    if (serverSync) {\n      return await updateNote(noteId, UpdateNoteDTO);\n    } else {\n      var noteDetailResultPromise: Promise<NoteDetailResult> = new Promise(\n        (resolve, reject) => {\n          note: UpdateNoteDTO;\n        }\n      );\n      return noteDetailResultPromise;\n    }\n  }\n);\n\nexport const createTagAndAddToNoteAction = createAsyncThunk(\n  'notes/createTagAndAddToNote',\n  async (noteActionDTO: NoteActionDto) => {\n    return await createTagAndAddToNote(noteActionDTO);\n  }\n);\n\n// TODO: Add sufix Action to all action functions\nexport const addTagToNoteAction = createAsyncThunk(\n  'notes/addTagToNoteAction',\n  async (noteActionDTO: NoteActionDto) => {\n    return await addTagToNote(noteActionDTO);\n  }\n);\n\n// TODO: Add sufix Action to all action functions\nexport const removeTagToNoteAction = createAsyncThunk(\n  'notes/removeTagToNoteAction',\n  async (noteActionDTO: NoteActionDto) => {\n    return await removeTagToNote(noteActionDTO);\n  }\n);\n\nconst notes = createSlice({\n  name: 'notes',\n  initialState: initialNotesState,\n  extraReducers: (builder) => {\n    builder\n      // setSelectedNoteId\n      .addCase(setSelectedNoteId, (state, action) => {\n        console.log('setSelectedNoteId', action);\n        console.log(\n          'action.payload.selectedNoteId',\n          action.payload.selectedNoteId\n        );\n\n        state.selectedNoteId = action.payload.selectedNoteId;\n      })\n\n      // fetchNoteThunk\n      .addCase(fetchNoteThunk.pending, (state, action) => {\n        console.log('fetchNote.pending');\n        state.error = null;\n\n        const noteId = action.meta.arg;\n        const note = state.notesCache[noteId];\n        const newNotes = { ...state.notes, [noteId]: note };\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(fetchNoteThunk.fulfilled, (state, action) => {\n        console.log('fetchNote.fulfilled', state, action);\n        const noteId = action.meta.arg;\n        const note = action.payload.note;\n        const newNotes = { ...state.notes, [noteId]: note };\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(fetchNoteThunk.rejected, (state, action) => {\n        console.log('# fetchNote.rejected', action);\n\n        // TODO: Need fallback to this optimistic rendering\n        // state.isLoading = false;\n        // state.error = action.error.message;\n      })\n\n      // fetchNotes\n      .addCase(fetchNotes.pending, (state, action) => {\n        console.log('# fetchNotes.pending', action);\n\n        if (Object.keys(state.notes).length === 0) {\n          state.isLoading = true;\n        }\n        state.error = null;\n      })\n      .addCase(fetchNotes.fulfilled, (state, action) => {\n        console.log('# fetchNotes.fulfilled', action);\n\n        state.isLoading = false;\n        state.error = null;\n        var notes = action.payload.notes;\n        state.notes = notes;\n        state.notesCache = notes;\n      })\n      .addCase(fetchNotes.rejected, (state, action) => {\n        console.log('# fetchNotes.rejected', state, action);\n\n        state.isLoading = false;\n        // state.error = action.error.message;\n      })\n\n      // createNoteThunk\n      .addCase(createNoteThunk.pending, (state, action) => {\n        console.log('createNoteThunk.pending', state, action);\n\n        // 02\n        // const noteIdTemp = 'temp-' + action.meta.requestId;\n        // const newNote = {\n        //   ...action.meta.arg,\n        //   id: noteIdTemp,\n        //   createDate: new Date(),\n        //   updateDate: new Date(),\n        // };\n        // const newNotes = { ...state.notes, [noteIdTemp]: newNote };\n        // state.notes = newNotes;\n        // state.notesCache = newNotes;\n      })\n      .addCase(createNoteThunk.fulfilled, (state, action) => {\n        console.log('createNoteThunk.fulfilled', state, action);\n\n        // 01\n        // const noteIdTemp = 'temp-' + action.meta.requestId;\n        // const newNote = action.payload.note;\n        // const newNotes = { ...state.notes, [noteIdTemp]: newNote };\n\n        // state.notes = newNotes;\n        // state.notesCache = newNotes;\n\n        // 02\n        // const noteIdTemp = 'temp-' + action.meta.requestId;\n        // const newNotesA = { ...state.notes };\n        // delete newNotesA[noteIdTemp];\n\n        // const newNote = action.payload.note;\n        // const newNotes = { ...newNotesA, [newNote.id]: newNote };\n\n        // state.notes = newNotes;\n        // state.notesCache = newNotes;\n\n        const newNote = action.payload.note;\n        const newNotes = { ...state.notes, [newNote.id]: newNote };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n        state.selectedNoteId = newNote.id;\n      })\n      .addCase(createNoteThunk.rejected, (state, action) => {\n        console.log('createNoteThunk.rejected', state, action);\n\n        // Rollback delete action with note from cache\n        // TODO: Display error to user (notification)\n        const noteId = 99999999999;\n        const newNotes = { ...state.notes };\n        delete newNotes[noteId];\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n\n      // addNoteLocalAction\n      .addCase(addNoteLocalAction, (state, action) => {\n        console.log('addNoteLocalAction', state, action);\n\n        const note = action.payload.note;\n        const noteId = note.id;\n        state.notes[noteId] = note;\n      })\n\n      // updateNoteThunk\n      .addCase(updateNoteThunk.pending, (state, action) => {\n        console.log('updateNoteThunk.pending', state, action);\n\n        // Optimistic rendering\n        const noteId = action.meta.arg.noteId;\n        const note = state.notes[noteId];\n        const newNote = {\n          ...note,\n          ...action.meta.arg.updateNoteDTO,\n          noteId: noteId,\n        }; // TODO: add types\n        const newNotes = { ...state.notes, [noteId]: newNote };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(updateNoteThunk.fulfilled, (state, action) => {\n        console.log('updateNoteThunk.fulfilled', state, action);\n\n        const noteId = action.payload.note.id;\n        const newNotes = { ...state.notes, [noteId]: action.payload.note };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(updateNoteThunk.rejected, (state, action) => {\n        console.log('updateNoteThunk.rejected', state, action);\n\n        // Rollback delete action with note from cache\n        // TODO: Display error to user (notification)\n        const noteId = action.meta.arg.noteId;\n        const noteCached = state.notesCache[noteId];\n        const newNotes = { ...state.notes, [noteId]: noteCached };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n\n      // deleteNoteThunk\n      .addCase(deleteNoteThunk.pending, (state, action) => {\n        console.log('deleteNoteThunk.pending', state, action);\n\n        const noteId = action.meta.arg;\n        const newNotes = { ...state.notes };\n        delete newNotes[noteId];\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(deleteNoteThunk.fulfilled, (state, action) => {\n        console.log('deleteNoteThunk.fulfilled', action);\n\n        // return state;\n      })\n      .addCase(deleteNoteThunk.rejected, (state, action) => {\n        console.log('deletNoteThunk.rejected', action);\n\n        // Rollback delete action with note from cache\n        // TODO: Display error to user (notification)\n        const noteId = action.meta.arg;\n        const noteCached = state.notesCache[noteId];\n        const newNotes = { ...state.notes, [noteId]: noteCached };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n\n      // createTagAndAddToNoteAction\n      .addCase(createTagAndAddToNoteAction.pending, (state, action) => {\n        console.log('createTagAndAddToNoteAction.pending', action);\n      })\n      .addCase(createTagAndAddToNoteAction.fulfilled, (state, action) => {\n        console.log('createTagAndAddToNoteAction.fulfilled', action);\n\n        // Add tag to tags state\n        const tag = action.payload.tag;\n        const tagId = tag.id;\n        console.error('TODO');\n        // TODO\n        // state.tags[tagId] = tag;\n        // state.tagsCache[tagId] = tag;\n      })\n      .addCase(createTagAndAddToNoteAction.rejected, (state, action) => {\n        console.log('createTagAndAddToNoteAction.rejected', action);\n      })\n\n      // addTagToNoteAction\n      .addCase(addTagToNoteAction.pending, (state, action) => {\n        console.log('addTagToNoteAction.pending', action);\n      })\n      .addCase(addTagToNoteAction.fulfilled, (state, action) => {\n        console.log('addTagToNoteAction.fulfilled', action);\n\n        const note = action.payload.note;\n        const noteId = note.id;\n        state.notes[noteId] = note;\n        state.notesCache[noteId] = note;\n      })\n      .addCase(addTagToNoteAction.rejected, (state, action) => {\n        console.log('addTagToNoteAction.rejected', action);\n      })\n\n      // removeTagToNoteAction\n      .addCase(removeTagToNoteAction.pending, (state, action) => {\n        console.log('removeTagToNoteAction.pending', action);\n      })\n      .addCase(removeTagToNoteAction.fulfilled, (state, action) => {\n        console.log('removeTagToNoteAction.fulfilled', action);\n\n        const note = action.payload.note;\n        const noteId = note.id;\n        state.notes[noteId] = note;\n        state.notesCache[noteId] = note;\n      })\n      .addCase(removeTagToNoteAction.rejected, (state, action) => {\n        console.log('removeTagToNoteAction.rejected', action);\n      });\n  },\n  reducers: {},\n});\n\nexport default notes.reducer;\n","export const hashCode = (str) => {\n  var hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n\n// TODO: Cleanup this part\nexport const HOST_URL = location.host === 'willahh.github.io' ? '/notizen' : '';\n\nexport const mapOfKeyValueToArrayOfMap = (m) => {\n  const acc = [];\n  const array = Object.keys(m ? m : {})\n    .reduce((acc, v) => {\n      if (m[v]) {\n        acc.push(m[v]);\n      }\n      return acc;\n    }, acc)\n    .sort((a, b) => {\n      return Number(b.id) - Number(a.id);\n    });\n  return array;\n};\n\nexport const arrayOfMapToMapOfKeyValue = (arr) => {\n  const acc = {};\n  const map = arr.reduce((acc, v) => {\n      if (v) {\n        acc[v.id].push(v);\n      }\n      return acc;\n    }, acc);\n  return map;\n};\n\n","import {\n  createTag,\n  deleteTag,\n  getTags,\n  createTagAndAddToNote,\n} from '../../api/notizenAPI';\nimport {\n  Tags,\n  Mode,\n  Tag,\n  createTagDto,\n  NoteActionDto,\n  UpdateNoteDTO,\n  TagIcon,\n  TagColor,\n} from '../../interfaces/INote.interface';\nimport { createAsyncThunk, createSlice, createAction } from '@reduxjs/toolkit';\nimport { updateTag } from './../../api/notizenAPI';\nimport { hashCode } from '../../app/utils';\n\ninterface TagsState {\n  isLoading: boolean;\n  error?: string;\n  tags: Tags;\n  tagsCache: Tags;\n  selectedTagId?: number;\n  mode: Mode;\n  deleteModeActive: boolean; // TODO: Remove use mode\n  editModeActive: boolean; // TODO: Remove use mode\n}\n\nconst initialTagsState: TagsState = {\n  error: undefined,\n  isLoading: false,\n  selectedTagId: undefined,\n  tags: {},\n  tagsCache: {},\n  deleteModeActive: false,\n  editModeActive: false,\n  mode: Mode.Default,\n};\n\nexport const fetchTags = createAsyncThunk('tags/fetch', async () => {\n  console.log('fetchTags thunk');\n  return await getTags();\n});\n\nexport const setTagModeAction = createAction(\n  'tags/setTagModeAction',\n  (tag: Tag, mode: Mode) => {\n    console.log('setTagMode action');\n    const updatedTag: Tag = { ...tag, mode: mode };\n    return {\n      payload: {\n        tag: updatedTag,\n      },\n    };\n  }\n);\n\nexport const setMode = createAction('tags/setMode', (mode: Mode) => {\n  return {\n    payload: {\n      mode: mode,\n    },\n  };\n});\n\nexport const updateTagLocal = createAction('tags/updateLocal', (tag: Tag) => {\n  return {\n    payload: {\n      tag: tag,\n    },\n  };\n});\n\nexport const updateTagVisibilityInFilterDropdownLocal = createAction(\n  'tag/updateTagVisibilityInFilterDropdownLocal',\n  (tag: Tag, visible: boolean) => {\n    console.log('updateTagVisibilityInFilterDropdownLocal', tag, visible);\n\n    return {\n      payload: {\n        tag: tag,\n        visible: visible,\n      },\n    };\n  }\n);\n\nexport const resetUpdateTag = createAction(\n  'tags/resetUpdateLocal',\n  (tagId: Number) => {\n    return {\n      payload: {\n        tagId: tagId,\n      },\n    };\n  }\n);\n\nexport const createTagAction = createAsyncThunk(\n  'tags/create',\n  async (createTagDto: createTagDto) => {\n    return await createTag(createTagDto);\n  }\n);\n\nexport const addTagActionLocal = createAction('tags/addTagActionLocal', (tag: Tag) => {\n  return {\n    payload: {\n      tag: tag,\n    },\n  };\n});\n\nexport const updateTagAction = createAsyncThunk(\n  'tags/update',\n  async ({ tagId, updateTagDto: updateTagDto }: any) => {\n    return await updateTag(tagId, updateTagDto);\n  }\n);\n\nexport const deleteTagAction = createAsyncThunk(\n  'tags/delete',\n  async (tagId: number) => {\n    return await deleteTag(tagId);\n  }\n);\n\nexport const createTagAndEditAction = (dispatch) => {\n  console.log('createTagAndEditAction');\n  const createTagDto: createTagDto = {\n    name: 'Mon tag',\n  };\n  // TODO: Use of any type because we need to set a special dispatch Type to this action, this is not trivial.\n  // @see https://github.com/reduxjs/redux-toolkit/issues/849\n  // https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n  const actionThunk: any = dispatch(createTagAction(createTagDto));\n  actionThunk.then((action) => {\n    console.log('THEN', action);\n    if (!action.error) {\n      const tag = action.payload.tag;\n      dispatch(setTagModeAction(tag, Mode.Edit));\n    } else {\n      console.warn('err', action.error);\n      // TODO: Throw user message\n    }\n  });\n};\n\nconst tags = createSlice({\n  name: 'notes',\n  initialState: initialTagsState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchTags.pending, (state, action) => {\n        console.log('fetchTags.pending', action);\n      })\n      .addCase(fetchTags.fulfilled, (state, action) => {\n        console.log('fetchTags.fulfilled', action);\n\n        const tags = action.payload.tags;\n        state.tags = tags;\n        state.tagsCache = tags;\n      })\n      .addCase(createTagAction.pending, (state, action) => {\n        console.log('createTagAction.pending', action);\n\n        // Optimistic create\n        const requestId = action.meta.requestId;\n        const tempTagId = hashCode(requestId);\n        const createTagDto = action.meta.arg;\n        const tag: Tag = {\n          id: tempTagId,\n          createDate: new Date(),\n          updateDate: new Date(),\n          isActive: false,\n          mode: Mode.Default,\n          name: createTagDto.name,\n          icon: TagIcon.default,\n          color: TagColor.default,\n          visibleInFilterDropdown: false // TODO \n        };\n        console.log('tempTagId', tempTagId);\n\n        state.tags[tempTagId] = tag;\n      })\n      .addCase(createTagAction.fulfilled, (state, action) => {\n        console.log('createTagAction.fulfilled', action);\n\n        // Remove temp Tag\n        const requestId = action.meta.requestId;\n        const tempTagId = hashCode(requestId);\n        // console.log('tempTagId', tempTagId);\n        // delete state.tags[tempTagId];\n\n        // TODO: Cannot create two Tag with the same name,\n        // this should be handled in the backend\n        const acc = {};\n        const tags = Object.keys(state.tags).reduce((acc, k) => {\n          if (k && Number(k) != tempTagId) {\n            acc[k] = state.tags[k];\n          }\n          return acc;\n        }, acc);\n        state.tags = tags;\n        state.tagsCache = tags;\n\n        // TODO: api should always return a complete Tag. This\n        // is not the case actually, so here is a test.\n        let success = action.payload.tag.id !== null;\n        if (success) {\n          const tag = action.payload.tag;\n          const tagId = tag.id;\n          state.tags[tagId] = tag;\n          state.tagsCache[tagId] = tag;\n\n          // const dispatch = useDispatch();\n          // dispatch(setMode(tag, Mode.Edit));\n        } else {\n          // id is not returned, maybe because the tag already exist\n        }\n      })\n      .addCase(createTagAction.rejected, (state, action) => {\n        console.log('createTagAction.rejected', action);\n\n        // Rollback optimistic create\n        // TODO: Display error to user (notification)\n        const requestId = action.meta.requestId;\n        const tagId = hashCode(requestId);\n        delete state.tags[tagId];\n      })\n      .addCase(addTagActionLocal, (state, action) => {\n        console.log('addTagActionLocal', action);\n\n        const tag = action.payload.tag;\n        const tagId = tag.id;\n        state.tags[tagId] = tag;\n      })\n      .addCase(resetUpdateTag, (state, action) => {\n        console.log('resetUpdateTag', action);\n\n        const tagId = String(action.payload.tagId);\n        const tag = state.tagsCache[tagId];\n        state.tags[tagId] = tag;\n        state.tagsCache[tagId] = tag;\n      })\n      .addCase(updateTagLocal, (state, action) => {\n        console.log('updateTagLocal', action);\n\n        const tag = action.payload.tag;\n        state.tags[tag.id] = action.payload.tag;\n      })\n      .addCase(updateTagVisibilityInFilterDropdownLocal, (state, action) => {\n        console.log('updateTagVisibilityInFilterDropdownLocal', action);\n\n        const tag = { ...action.payload.tag };\n        const visible = action.payload.visible;\n        tag.visibleInFilterDropdown = visible;\n        state.tags[tag.id] = tag;\n      })\n      .addCase(updateTagAction.pending, (state, action) => {\n        console.log('updateTagAction.pending', action);\n\n        // Optimistic update\n        const tagId = action.meta.arg.tagId;\n        const tag = state.tags[tagId];\n        const updateTagDto = action.meta.arg.updateTagDto;\n        const newTag = { ...tag, updateTagDto, mode: Mode.Default };\n\n        state.tags[tag.id] = newTag;\n      })\n      .addCase(updateTagAction.fulfilled, (state, action) => {\n        console.log('updateTagAction.fulfilled', action);\n        const tag = action.payload.tag;\n        state.tags[tag.id] = tag;\n        state.tagsCache[tag.id] = tag;\n      })\n      .addCase(updateTagAction.rejected, (state, action) => {\n        console.log('updateTagAction.rejected', action);\n\n        // Rollback optimistic update when failure\n        // TODO: Display error to user (notification)\n        const tagId = action.meta.arg.tagId;\n        const tag = state.tagsCache[tagId];\n        state.tags[tagId] = tag;\n      })\n      .addCase(deleteTagAction.pending, (state, action) => {\n        console.log('deleteTagAction.pending', action);\n\n        const tagId = action.meta.arg;\n        const newTags = { ...state.tags };\n        delete newTags[tagId];\n        state.deleteModeActive = false;\n        state.tags = newTags;\n      })\n      .addCase(deleteTagAction.fulfilled, (state, action) => {\n        console.log('deleteTagAction.fulfilled', action);\n        state.tagsCache = { ...state.tags };\n      })\n      .addCase(deleteTagAction.rejected, (state, action) => {\n        console.log('deleteTagAction.rejected', action);\n\n        const tagId = action.meta.arg;\n        const tag = state.tagsCache[tagId];\n        state.tags[tagId] = tag;\n      })\n      .addCase(setMode, (state, action) => {\n        console.log('setMode', action);\n        state.mode = action.payload.mode;\n      })\n      .addCase(setTagModeAction, (state, action) => {\n        console.log('setMode', action);\n        const tag = action.payload.tag;\n        state.tags[tag.id] = action.payload.tag;\n      });\n  },\n});\n\nexport default tags.reducer;\nfunction dispatch(arg0: { payload: { tag: Tag }; type: 'tags/setMode' }) {\n  throw new Error('Function not implemented.');\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport notesReducer from '../features/note/noteListSlice';\nimport tagsReducer from './../features/tags/TagsSlice'; // TODO: case => tagsSlice\n\nconst rootReducer = combineReducers({\n  notes: notesReducer,\n  tags: tagsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport rootReducer, { RootState } from './rootReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst debug = false;\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (debug) console.log('### 01');\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if (true) {\n    if (debug) console.log('### 02 prod && serviceWOrker');\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      if (debug) console.warn('### origin');\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      if (debug) console.log('### on load');\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swUrl = `file:///Users/willahh/www/projects/notizen/frontend/web/src/serviceWorker.js`;\n      if (debug) console.log('### swUrl', swUrl);\n\n      if (isLocalhost) {\n        if (debug) console.log('### isLocalhost');\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          if (debug) console.log('### navigator.serviceWorker.ready');\n          if (debug)\n            console.log(\n              '#### This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n        });\n      } else {\n        if (debug) console.log('### not localhost');\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    if (debug)\n      console.warn(\n        '### process.env.NODE_ENV === production && serviceWorker in navigator'\n      );\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  if (debug) console.log('### registerValidSW', swUrl, config);\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      if (debug) console.log('### then registration');\n      registration.onupdatefound = () => {\n        if (debug) console.log('### registration.onupdatefound');\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              if (debug)\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              if (debug) console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      if (debug)\n        console.error('### Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  if (debug) console.log('### checkValidServiceWorker', swUrl, config);\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      if (debug) console.log('### response fetch');\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (debug)\n        console.log(\n          '### contentType, response.status',\n          contentType,\n          response.status\n        );\n      if (debug)\n        console.log(\n          '### contentType.indexOf(javascript)',\n          contentType.indexOf('javascript')\n        );\n      if (false) {\n        // (\n        //   response.status === 404 ||\n        //   (contentType != null && contentType.indexOf('javascript') === -1)\n        // )\n        if (debug)\n          console.warn(\n            '### No service worker found. Probably a different app. Reload the page.'\n          );\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        if (debug)\n          console.log('### // Service worker found. Proceed as normal.');\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      if (debug)\n        console.log(\n          '### No internet connection found. App is running in offline mode.'\n        );\n      if (debug)\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        if (debug) console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n// import { useSpring, animated } from 'react-spring';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  deleteNoteThunk,\n  setSelectedNoteId,\n} from '../features/note/noteListSlice';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { JsxElement } from 'typescript';\n// import TransitionGroup from 'react-transition-group/TransitionGroup';\n// import ReactTransitionGroup from 'react/lib/ReactTransitionGroup';\n\n// TODO: Share with INote (and with back Note)\ninterface INoteItemProps {\n  id: string;\n  title: string | undefined;\n  text: string | undefined;\n  tags: string[];\n  isSelected: boolean;\n}\nfunction truncateString(str: string, num: number) {\n  if (str.length <= num) {\n    return str;\n  }\n  return str.slice(0, num) + '...';\n}\n\nconst NoteItemThumb: React.FC<INoteItemProps> = ({ id, text, title, tags }) => {\n  console.log('NoteItemThumb', id);\n\n  const dispatch = useDispatch();\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n  const isSelected = id === selectedNoteId;\n\n  let className = 'relative py-5 px-4 bg-white dark:bg-black';\n  if (isSelected) {\n    className += ' border-l-4 border-indigo-700';\n  } else {\n    className += ' border-white dark:border-black';\n  }\n  const btnClassName =\n    'relative inline-flex items-center p-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-md bg-white dark:bg-black dark:border-gray-800';\n\n  const tagType = Math.round(Math.random() * 5);\n  let tagColorClassName = ' text-green-800 bg-green-100';\n  switch (tagType) {\n    case 0:\n      tagColorClassName = ' text-red-800 bg-red-100';\n      break;\n    case 1:\n      tagColorClassName = ' text-yellow-800 bg-yellow-100';\n      break;\n    case 2:\n      tagColorClassName = ' text-blue-800 bg-blue-100';\n      break;\n    case 3:\n      tagColorClassName = ' text-indigo-800 bg-indigo-100';\n      break;\n    case 4:\n      tagColorClassName = ' text-purple-800 bg-purple-100';\n      break;\n  }\n  return (\n    <li className=\"w-52 h-52 overflow-hidden border border-gray-200 dark:border-gray-700 rounded-md p-4\">\n      <div className=\"flex flex-col h-full\">\n        <div className=\"relative\">\n          <div className=\"absolute right-2 top-2 flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full\">\n            Pin\n          </div>\n\n          <h3\n            className=\"text-gray-900 dark:text-gray-50\"\n            style={{ fontSize: 'xx-small' }}\n          >\n            {title}\n          </h3>\n          <div\n            className=\"text-gray-300 dark:text-gray-700\"\n            style={{ fontSize: 'xx-small' }}\n          >\n            {text}\n          </div>\n        </div>\n        <div className=\"h-10\">\n          <div\n            className={\n              'flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full' +\n              tagColorClassName\n            }\n          >\n            {tags}\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport { NoteItemThumb };\n","import React from 'react';\n\nexport type INoteFilterProps = {};\n\nconst NoteFilter: React.FC<INoteFilterProps> = ({}) => {\n  return (\n    <div className=\"flex-shrink-0 h-16 border-b-1 border-gray-200 bg-white dark:bg-black dark:border-gray-800\">\n      <div className=\"h-16 flex flex-col justify-center\">\n        <div className=\"max-w-2xl relative text-gray-400 focus-within:text-gray-500\">\n          <label htmlFor=\"search\" className=\"sr-only\">\n            Search in notes\n          </label>\n          <input\n            id=\"search\"\n            type=\"search\"\n            placeholder=\"Search in notes\"\n            className=\"block w-full border-transparent pl-12 placeholder-gray-500 focus:border-transparent sm:text-sm focus:ring-0 dark:bg-black\"\n          />\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center justify-center pl-4\">\n            <svg\n              className=\"h-5 w-5\"\n              x-description=\"Heroicon name: solid/search\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { NoteFilter };\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { Tag, Mode, updateTagDto } from '../../interfaces/INote.interface';\nimport {\n  deleteTagAction,\n  resetUpdateTag,\n  setTagModeAction,\n  updateTagAction,\n  updateTagLocal,\n} from './TagsSlice';\n\ninterface TagProps {\n  tag: Tag;\n  deleteModeActive: boolean;\n  mode: Mode;\n}\n\nconst TagComponent: React.FC<TagProps> = ({ tag, mode, deleteModeActive }) => {\n  console.log('TagComponent cmp');\n\n  var { name } = tag;\n  const tagMode = tag.mode;\n  const dispatch = useDispatch();\n\n  let tagComponent = null;\n  switch (tagMode) {\n    case Mode.Default:\n    default:\n      tagComponent = (\n        <a\n          href=\"#\"\n          className={\n            'h-full text-gray-900 group flex items-center text-sm font-normal rounded-md select-none' +\n            (false\n              ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n              : ' dark:text-gray-500')\n          }\n          onDoubleClick={() => {\n            if (mode === Mode.Edit) {\n              dispatch(setTagModeAction(tag, Mode.Edit));\n            }\n          }}\n        >\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <div className=\"truncate w-full\">{name}</div>\n          {mode === Mode.Edit && (\n            <div className=\"inline-flex\">\n              <button\n                title=\"Edit\"\n                className=\"ml-2\"\n                onClick={() => {\n                  dispatch(setTagModeAction(tag, Mode.Edit));\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  className=\"w-3 dark:text-gray-500\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n                  />\n                </svg>\n              </button>\n              <button\n                title=\"Delete\"\n                className=\"ml-2\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  console.log('click delete button');\n\n                  dispatch(setTagModeAction(tag, Mode.Delete));\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  className=\"w-3 dark:text-gray-500\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </div>\n          )}\n        </a>\n      );\n      break;\n    case Mode.Edit:\n      tagComponent = (\n        <a\n          href=\"#\"\n          className={\n            'h-full text-gray-900 group flex items-center text-sm font-normal rounded-md select-none' +\n            (false\n              ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n              : ' dark:text-gray-500')\n          }\n        >\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <input\n            type=\"text\"\n            className=\"mt-1 block w-full rounded-md shadow-sm py-1 px-2 order bg-white dark:bg-black border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\n            value={name}\n            autoFocus\n            onChange={(e) => {\n              const updatedTag: Tag = { ...tag, name: e.target.value };\n              dispatch(updateTagLocal(updatedTag));\n            }}\n            onBlur={(e) => {\n              const tagId = tag.id;\n              const updateTagDto: updateTagDto = {\n                name: e.target.value,\n              };\n              dispatch(updateTagAction({ tagId, updateTagDto }));\n            }}\n            onKeyDown={(e) => {\n              if (e.keyCode == 27) {\n                // escape\n                const tagId = tag.id;\n                dispatch(resetUpdateTag(tagId));\n              } else if (e.keyCode == 13) {\n                // enter\n                const tagId = tag.id;\n                const updateTagDto: updateTagDto = {\n                  name: e.target.value,\n                };\n                dispatch(updateTagAction({ tagId, updateTagDto }));\n              }\n            }}\n          ></input>\n        </a>\n      );\n      break;\n    case Mode.Delete:\n      tagComponent = (\n        <div\n          className={\n            'h-full text-gray-900 group flex items-center text-sm font-normal rounded-md select-none' +\n            (false\n              ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n              : ' dark:text-gray-500')\n          }\n        >\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <div className=\"flex align-middle\">\n            <div className=\"truncate text-xs w-full flex items-center pr-2\">\n              Confirm ?\n            </div>\n            {/* <span className=\"truncate w-full\">{name}</span> */}\n            <div>\n              <div className=\"relative z-0 inline-flex shadow-sm rounded-md \">\n                <button\n                  type=\"button\"\n                  className=\"relative inline-flex items-center px-2 py-1 rounded-l-md text-xs border border-gray-300 bg-white dark:border-gray-600 dark:bg-black text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                  onClick={(e) => {\n                    dispatch(deleteTagAction(tag.id));\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.keyCode == 27) {\n                      // escape\n                      dispatch(resetUpdateTag(tag.id));\n                    } else if (e.keyCode == 13) {\n                      // enter\n                      dispatch(deleteTagAction(tag.id));\n                    }\n                  }}\n                >\n                  Yes\n                </button>\n                <button\n                  autoFocus\n                  type=\"button\"\n                  className=\"-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md text-xs border border-gray-300 bg-white dark:border-gray-600 dark:bg-black text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                  onClick={() => {\n                    dispatch(resetUpdateTag(tag.id));\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.keyCode == 27) {\n                      // escape\n                      dispatch(resetUpdateTag(tag.id));\n                    } else if (e.keyCode == 13) {\n                      // enter\n                      dispatch(resetUpdateTag(tag.id));\n                    }\n                  }}\n                >\n                  No\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n      break;\n  }\n  return <li className=\"relative overflow-hidden h-10 p-2\">{tagComponent}</li>;\n};\n\nexport { TagComponent };\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { createTagDto, Mode, Tag } from '../../interfaces/INote.interface';\nimport {\n  createTagAction,\n  createTagAndEditAction,\n  fetchTags,\n  setMode,\n} from './TagsSlice';\nimport { TagComponent } from './Tag';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { mapOfKeyValueToArrayOfMap } from '../../app/utils';\ninterface ITagsProps {}\n\nconst Tags: React.FC<ITagsProps> = ({}) => {\n  const { error, isLoading, tags } = useSelector(\n    (state: RootState) => state.tags\n  );\n  const deleteModeActive = useSelector(\n    (state: RootState) => state.tags.deleteModeActive\n  );\n  const mode = useSelector((state: RootState) => state.tags.mode);\n  const dispatch = useDispatch();\n  const tagsList: Tag[] = mapOfKeyValueToArrayOfMap(tags);\n\n  useEffect(() => {\n    dispatch(fetchTags());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"flex items-center p-2 h-10\">\n        <div className=\"flex w-full items-center text-sm text-gray-700 dark:text-gray-500 font-normal\">\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <div className=\"truncate w-full\">Tags</div>\n        </div>\n        <button\n          className=\"text-black dark:text-white ml-2\"\n          title=\"Create\"\n          onClick={() => {\n            createTagAndEditAction(dispatch);\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            className=\"w-3 dark:text-gray-500\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </button>\n        {mode === Mode.Default && (\n          <button\n            className=\"text-blac dark:text-white ml-2\"\n            title=\"Edit\"\n            onClick={() => {\n              dispatch(setMode(Mode.Edit));\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              className=\"w-3 dark:text-gray-500\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n              />\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n              />\n            </svg>\n          </button>\n        )}\n        {mode === Mode.Edit && (\n          <button\n            className=\"text-blac dark:text-white ml-2\"\n            title=\"Terminer\"\n            onClick={() => {\n              dispatch(setMode(Mode.Default));\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              className=\"w-3 dark:text-gray-500\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n      <div className=\"flex h-full overflow-auto\">\n        <TransitionGroup component=\"ul\" className=\"overflow-auto \" type=\"ul\">\n          {tagsList.map((tag) => (\n            <CSSTransition key={tag.id} timeout={400} classNames=\"tag-item\">\n              <TagComponent\n                tag={tag}\n                mode={mode}\n                deleteModeActive={deleteModeActive}\n              />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n};\n\nexport { Tags };\n","import React from 'react';\n\nexport type IUserProfileCardProps = {};\n\nconst UserProfileCard: React.FC<IUserProfileCardProps> = ({}) => {\n  return ( \n    <div className=\"flex-shrink-0 flex border-t-1 border-gray-200 p-4 dark:border-gray-800\">\n      <a href=\"#\" className=\"flex-shrink-0 w-full group block\">\n        <div className=\"flex items-center\">\n          <div>\n            <img\n              className=\"inline-block h-9 w-9 rounded-full\"\n              src=\"/user_wravel.jpeg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-gray-700 group-hover:text-gray-900 dark:text-gray-300 dark:group-hover:text-gray-100\">\n              William Ravel\n            </p>\n            <p className=\"text-xs font-medium text-gray-500 group-hover:text-gray-700 dark:text-gray-500 dark:group-hover:text-gray-300\">\n              Preferences\n            </p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport { UserProfileCard };\n","import React, { useEffect, useState } from 'react';\nimport { Tags } from '../features/tags/Tags';\nimport { UserProfileCard } from './UserProfileCard';\n\nexport type ISidebarDesktopProps = {};\n\nconst SidebarDesktop: React.FC<ISidebarDesktopProps> = ({}) => {\n  const links = [\n    { label: 'Clojure for the Brave and True', selected: true },\n    { label: 'Personal notes', selected: false },\n    { label: 'Family', selected: false },\n    { label: 'Actuality', selected: false },\n  ];\n\n  const [isColorSchemeDark, setColorSchemeDark] = useState(\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n\n  useEffect(() => {\n    const list = window.matchMedia('(prefers-color-scheme: dark)');\n\n    const handler = (list: any) => {\n      setColorSchemeDark(list.matches);\n    };\n\n    handler(list);\n    list.addListener(handler);\n    return () => {\n      list.removeListener(handler);\n    };\n  }, []);\n\n  const logoSrc = isColorSchemeDark\n    ? require('./../assets/notizen-dark.svg').default\n    : require('./../assets/notizen.svg').default;\n\n  return (\n    <div className=\"hidden lg:flex lg:flex-shrink-0 border-r-1 dark:border-gray-800\">\n      <div className=\"flex flex-col w-44\">\n        <div className=\"flex flex-col h-0 flex-1 bg-white dark:bg-black \">\n          <div className=\"flex-1 h-16 flex flex-col pb-4 overflow-y-auto\">\n            <div className=\"flex items-center h-16 justify-center\">\n              <img src={logoSrc} alt=\"logo\" style={{ width: 120 }} />\n            </div>\n            <nav className=\"mt-2 flex-1\" aria-label=\"Sidebar\">\n              <div className=\"px-2 space-y-1 divide-y divide-y-2 divide-gray:200 dark:divide-gray-800\">\n                <div>\n                <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <div className=\"truncate w-full\">All</div>\n                  </a>\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <div className=\"truncate w-full\">Recent</div>\n                  </a>\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <div className=\"truncate w-full\">Todo</div>\n                  </a>{' '}\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                      />\n                    </svg>\n                    <div className=\"truncate w-full\">Fav</div>\n                  </a>\n                </div>\n                <div>\n                  {links.map(({ label, selected }) => (\n                    <a\n                      key={label}\n                      href=\"#\"\n                      className={\n                        'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                        (selected\n                          ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                          : ' dark:text-gray-500')\n                      }\n                    >\n                      <svg\n                        className=\"text-gray-500 mr-3 h-6 w-6\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        {' '}\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n                        />{' '}\n                      </svg>\n                      <div className=\"truncate w-full\">{label}</div>\n                    </a>\n                  ))}\n                </div>\n                <div>\n                  <Tags />\n                </div>\n                <div>\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                      />\n                    </svg>\n                    <div className=\"w-full\">\n                      <div className=\"relative\">\n                        Trash\n                        <div className=\"absolute -top-1 -right-2 block h-2 w-2 rounded-full ring-2 ring-white bg-red-400\"></div>\n                      </div>\n                    </div>\n                  </a>\n                </div>\n              </div>\n            </nav>\n          </div>\n          <UserProfileCard></UserProfileCard>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { SidebarDesktop };\n","import React from 'react';\nimport logo from './../assets/notizen.svg';\n\nexport type ILogoProps = {};\n\nconst Logo: React.FC<ILogoProps> = ({}) => {\n  return (\n    <div className=\"flex-shrink-0 flex items-center px-4\">\n      <img className=\"h-8 w-auto\" src={logo} alt=\"Citizen logo\" />\n    </div>\n  );\n};\n\nexport { Logo };\n","import React from 'react';\n\nexport type IMenuProps = {};\n\nconst Menu: React.FC<IMenuProps> = ({}) => {\n  return (\n    <nav aria-label=\"Sidebar\" className=\"mt-5\">\n      <div className=\"px-2 space-y-1\">\n        <a\n          href=\"#\"\n          className=\"group flex items-center px-2 py-2 text-base font-medium rounded-md bg-gray-100 text-gray-900 dark:bg-gray-900\"\n        >\n          {/* Current: \"text-gray-500\", Default: \"text-gray-400 group-hover:text-gray-500\" */}\n          {/* Heroicon name: outline/home */}\n          <svg\n            className=\"text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n            />\n          </svg>\n          Dashboard\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/calendar */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n            />\n          </svg>\n          Calendar\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/user-group */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n            />\n          </svg>\n          Teams\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/search-circle */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          Directory\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/speakerphone */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z\"\n            />\n          </svg>\n          Announcements\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/map */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"\n            />\n          </svg>\n          Office Map\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport { Menu };\n","import React from 'react';\n\nexport type ISidebarCloseProps = {};\n\nconst SidebarClose: React.FC<ISidebarCloseProps> = ({}) => {\n  return (\n    <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n      <button\n        type=\"button\"\n        className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n      >\n        <div className=\"sr-only\">Close sidebar</div>\n        {/* Heroicon name: outline/x */}\n        <svg\n          className=\"h-6 w-6 text-white\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport { SidebarClose };\n","import React from 'react';\n\nexport type IUserProfileCardMobileProps = {};\n\nconst UserProfileCardMobile: React.FC<IUserProfileCardMobileProps> = ({}) => {\n  return (\n    <div className=\"flex-shrink-0 flex border-t-1 border-gray-200 p-4 dark:border-gray-800\">\n      <a href=\"#\" className=\"flex-shrink-0 group block\">\n        <div className=\"flex items-center\">\n          <div>\n            <img\n              className=\"inline-block h-10 w-10 rounded-full\"\n              src=\"/user_wravel.jpeg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-base font-medium text-gray-700 group-hover:text-gray-900\">\n              William Ravel\n            </p>\n            <p className=\"text-sm font-medium text-gray-500 group-hover:text-gray-700\">\n              Preferences\n            </p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport { UserProfileCardMobile };\n","import React from 'react';\nimport { Logo } from './Logo';\nimport { Menu } from './Menu';\nimport { SidebarClose } from './SidebarClose';\nimport { UserProfileCardMobile } from './UserProfileCardMobile';\n\nexport type IMenuMobileProps = {};\n\nconst MenuMobile: React.FC<IMenuMobileProps> = ({}) => {\n  return (\n    <div className=\"sm:hidden\">\n      {/* Off-canvas menu for mobile, show/hide based on off-canvas menu state. */}\n      <div className=\"fixed inset-0 flex z-40\">\n        {/*\n      Off-canvas menu overlay, show/hide based on off-canvas menu state.\n    \n      Entering: \"transition-opacity ease-linear duration-300\"\n        From: \"opacity-0\"\n        To: \"opacity-100\"\n      Leaving: \"transition-opacity ease-linear duration-300\"\n        From: \"opacity-100\"\n        To: \"opacity-0\"\n    */}\n        <div className=\"fixed inset-0\">\n          <div className=\"absolute inset-0 bg-gray-600 opacity-75\" />\n        </div>\n        {/*\n      Off-canvas menu, show/hide based on off-canvas menu state.\n    \n      Entering: \"transition ease-in-out duration-300 transform\"\n        From: \"-translate-x-full\"\n        To: \"translate-x-0\"\n      Leaving: \"transition ease-in-out duration-300 transform\"\n        From: \"translate-x-0\"\n        To: \"-translate-x-full\"\n    */}\n        <div\n          tabIndex={0}\n          className=\"relative flex-1 flex flex-col max-w-xs w-full focus:outline-none bg-white dark:bg-black\"\n        >\n          <SidebarClose></SidebarClose>\n          <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n            <Logo></Logo>\n            <Menu></Menu>\n          </div>\n          <UserProfileCardMobile></UserProfileCardMobile>\n        </div>\n        <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n          {/* Force sidebar to shrink to fit close icon */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { MenuMobile };\n","import React from 'react';\nimport { SidebarDesktop } from '@notizen/frontend-common/components/SidebarDesktop';\nimport { MenuMobile } from '@notizen/frontend-common/components/MenuMobile';\nimport { Main } from '@notizen/frontend-common/components/Main';\n\ninterface IMainTemplateProps {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nconst MainTemplate: React.FC<IMainTemplateProps> = ({ children }) => {\n  return (\n     <div className=\"h-screen flex overflow-hidden bg-white dark:bg-black\">\n      <MenuMobile></MenuMobile>\n      <SidebarDesktop></SidebarDesktop>\n      {children}\n    </div>\n  );\n};\n\nexport default MainTemplate;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, NavLink, useRouteMatch } from 'react-router-dom';\nimport { HOST_URL } from '../app/utils';\nimport { createNoteThunk } from '../features/note/noteListSlice';\n\nexport type IToolbarProps = {};\n\nconst Toolbar: React.FC<IToolbarProps> = ({}) => {\n  const dispatch = useDispatch();\n  // let match = useRouteMatch();\n  // console.log('#match : ', match);\n\n  return (\n    <div className=\"sticky top-0 h-16 flex-shrink-0 border-b-1 border-gray-200 bg-white dark:bg-black dark:border-gray-800\">\n      {/* Toolbar*/}\n      <div className=\"flex flex-col justify-items-end\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-3 flex justify-between\">\n            {/* Left buttons */}\n            <div>\n              <div className=\"relative z-0 inline-flex shadow-sm rounded-md sm:shadow-none sm:space-x-3\">\n                <div className=\"inline-flex sm:shadow-sm\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const id = Math.floor(Math.random() * 500);\n                      dispatch(\n                        createNoteThunk({\n                          // name: 'Le titre de ma superbe note' + id,\n                          name: '',\n                          content: ''\n                        })\n                      );\n                    }}\n                    className=\"relative inline-flex items-center px-4 py-2 rounded-l-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800 dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                      />\n                    </svg>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path d=\"M21 5V3H3V5H21Z\" fill=\"currentColor\" />\n                      <path d=\"M21 19V21H3V19H21Z\" fill=\"currentColor\" />\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M12.0001 7.37636C11.602 7.35207 11.2112 7.56874 11.0325 7.95204L7.65154 15.2025C7.41815 15.7031 7.6347 16.2981 8.13522 16.5315C8.63577 16.7649 9.23074 16.5484 9.46417 16.0477L9.95278 14.9999H14.0473L14.5359 16.0477C14.7693 16.5484 15.3643 16.7649 15.8648 16.5315C16.3654 16.2981 16.5819 15.7031 16.3485 15.2025L12.9676 7.95204C12.7888 7.56874 12.3981 7.35207 12.0001 7.37636ZM13.1147 12.9999H10.8854L12.0001 10.6095L13.1147 12.9999Z\"\n                        fill=\"currentColor\"\n                      />\n                    </svg>\n                  </button>\n                  {/* <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-r-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                      />\n                    </svg>\n                  </button> */}\n                </div>\n                <div className=\"hidden lg:flex space-x-3\">\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                      />\n                    </svg>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                      />\n                    </svg>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\"\n                      />\n                    </svg>\n                  </button>\n                </div>\n                <div className=\"-ml-px relative block sm:shadow-sm sm:hidden\">\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 sm:rounded-md sm:px-3 bg-white dark:bg-black\"\n                      id=\"menu-3\"\n                      aria-haspopup=\"true\"\n                    >\n                      <div className=\"sr-only sm:hidden\">More</div>\n                      <div className=\"hidden sm:inline\">More</div>\n                      <svg\n                        className=\"h-5 w-5 text-gray-400 sm:ml-2 sm:-mr-1\"\n                        x-description=\"Heroicon name: solid/chevron-down\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        aria-hidden=\"true\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                  <div\n                    className=\"origin-top-right absolute right-0 mt-2 w-36 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none bg-white dark:bg-black\"\n                    role=\"menu\"\n                    aria-orientation=\"vertical\"\n                    aria-labelledby=\"menu-3\"\n                    style={{ display: 'none' }}\n                  >\n                    <div className=\"py-1\">\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Note\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Assign\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Archive\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Move\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"inline-flex sm:shadow-sm\">\n                  <nav>\n                    <NavLink\n                      className=\"-ml-px relative inline-flex items-center px-4 py-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-l-md bg-white dark:bg-black dark:border-gray-800\"\n                      to={`${HOST_URL}/note/note-list`}\n                      // to=\"/note/note-list\"\n                      activeClassName=\"bg-indigo-200 dark:bg-indigo-700\"\n                    >\n                      <svg\n                        className=\"h-5 w-5 text-gray-400\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\n                        />\n                      </svg>\n                    </NavLink>\n                    <NavLink\n                      className=\"-ml-px relative inline-flex items-center px-4 py-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-r-md bg-white dark:bg-black dark:border-gray-800\"\n                      to={`${HOST_URL}/note/note-thumb`}\n                      // to=\"/note/note-thumb\"\n                      activeClassName=\"bg-indigo-200 dark:bg-indigo-700\"\n                    >\n                      <svg\n                        className=\"h-5 w-5 text-gray-400\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n                        />\n                      </svg>\n                    </NavLink>\n                  </nav>\n                </div>\n              </div>\n            </div>\n            {/* Right buttons */}\n          </div>\n        </div>\n      </div>\n      {/* Message header */}\n    </div>\n  );\n};\n\nexport { Toolbar };\n","import React, { useEffect } from 'react';\nimport { NoteItemThumb } from '../../components/NoteItemThumb';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { fetchNotes } from './noteListSlice';\nimport { NoteFilter } from '../../components/NoteFilter';\nimport { MainArea } from '../../components/MainArea';\nimport { LOCAL_STORAGE_NOTES_KEY } from '../../constants';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from 'react-router-dom';\nimport MainTemplate from '../../components/MainTemplate';\nimport { Toolbar } from '../../components/Toolbar';\nimport { INote } from '../../interfaces/INote.interface';\n\nconst scrollbar = require('smooth-scrollbar-react');\nconst ScrollBar = scrollbar.default;\n\ninterface INoteProps {}\n\nconst NoteThumb: React.FC<INoteProps> = () => {\n  const dispatch = useDispatch();\n  const { error, isLoading, notes } = useSelector(\n    (state: RootState) => state.notes\n  );\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_NOTES_KEY, JSON.stringify(notes));\n  }, [notes]);\n\n  const acc: INote[] = [];\n  const notesList = Object.keys(notes)\n    .reduce((acc, v) => {\n      if (notes[v]) {\n        acc.push(notes[v]);\n      }\n      return acc;\n    }, acc)\n    .sort(({ id: a }, { id: b }) => {\n      return Number(a) - Number(b);\n    });\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  let noteListHtml = null;\n  let match = useRouteMatch();\n\n  if (error) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        {error}\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        Loading\n      </p>\n    );\n  } else {\n    noteListHtml = (\n      /* <ScrollBar damping={0.5} thumbMinSize={20}> */\n      <TransitionGroup\n        component=\"ul\"\n        className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4 p-4\"\n        type=\"ul\"\n      >\n        {notesList.map(({ id, name, content }) => {\n          return (\n            <CSSTransition key={id} timeout={400} classNames=\"item\">\n              <NoteItemThumb\n                key={id}\n                id={id}\n                title={name}\n                tags={['Tag 1']}\n                text={content}\n                isSelected={true}\n              />\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    );\n  }\n\n  return (\n    <MainTemplate>\n      <div className=\"flex w-full flex-col\">\n        <div>\n          <Toolbar />\n          <NoteFilter />\n        </div>\n        <div className=\"flex h-full\">{noteListHtml}</div>\n      </div>\n    </MainTemplate>\n  );\n};\n\nexport { NoteThumb };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  deleteNoteThunk,\n  setSelectedNoteId,\n} from '../features/note/noteListSlice';\nimport { INote, NoteColor } from '../interfaces/INote.interface';\n// import TransitionGroup from 'react-transition-group/TransitionGroup';\n// import ReactTransitionGroup from 'react/lib/ReactTransitionGroup';\n\ninterface INoteProps extends INote {\n  isSelected: boolean;\n}\n\nfunction truncateString(str: string, num: number) {\n  if (str.length <= num) {\n    return str;\n  }\n  return str.slice(0, num) + '...';\n}\n\nconst NoteItem: React.FC<INoteProps> = ({ id, content, name, tags, color }) => {\n  console.log('NoteItem', color);\n  \n  const dispatch = useDispatch();\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n  const isSelected = id === selectedNoteId;\n\n  let itemCls =\n    'relative overflow-hidden select-none border-l-4 duration-300 ease-in-out';\n  let itemInnerCls =\n    'relative py-5 px-4 bg-white dark:bg-black duration-300 ease-in-out transition-all';\n  if (isSelected) {\n    itemCls += ` border-${color.toLowerCase()}-700`;\n    itemInnerCls += ' transform left-2';\n  } else {\n    itemCls += ' border-white dark:border-black';\n    itemInnerCls += ' left-0';\n  }\n  const btnClassName =\n    'relative inline-flex items-center p-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-md bg-white dark:bg-black dark:border-gray-800';\n\n  return (\n    <li\n      className=\"relative overflow-hidden\"\n      style={{ zIndex: Number(id) }}\n      note-id={id}\n      onClick={() => {\n        dispatch(setSelectedNoteId(id));\n      }}\n    >\n      <div className={itemCls}>\n        <div className={itemInnerCls}>\n          <div className=\"flex justify-between space-x-3\">\n            <div className=\"min-w-0 flex-1\">\n              <a href=\"#\" className=\"block focus:outline-none\">\n                <div className=\"absolute inset-0\" aria-hidden=\"true\" />\n                <p className=\"text-sm font-medium truncate text-gray-900 dark:text-gray-200\">\n                  {name}\n                </p>\n                <p className=\"text-sm truncate text-gray-500 dark:text-gray-300\">\n                  Tag 1, Tag 2\n                  {/* TODO: Need to retrieve tags within Notes (new backend service notesDetailed required*/}\n                  {/* {tags && tags.map(({mode}) => <span>{name}</span>)} */}\n                </p>\n              </a>\n            </div>\n            <time\n              dateTime=\"2021-01-27T16:35\"\n              className=\"flex-shrink-0 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\"\n            >\n              1d ago\n            </time>\n            <button\n              className={btnClassName}\n              onClick={(e) => {\n                console.log('onClick', id);\n                e.stopPropagation();\n                dispatch(deleteNoteThunk(id));\n              }}\n            >\n              <svg\n                className=\"w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                />\n              </svg>\n            </button>\n          </div>\n          <div className=\"mt-1 max-h-10 overflow-hidden\">\n            <p className=\"line-clamp-2 text-sm text-gray-600 dark:text-gray-500\">\n              {content ? truncateString(content, 64) : 'Ma nouvelle note'}\n            </p>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport { NoteItem };\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { CSSTransition, Transition } from 'react-transition-group';\n\ninterface IAreaSecondaryProps {\n  children: ReactElement | ReactElement[];\n}\n\nconst AreaSecondary: React.FC<IAreaSecondaryProps> = ({ children }) => {\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true);\n  }, [inProp]);\n\n  return (\n    <CSSTransition in={inProp} timeout={500} classNames=\"areaSecondary\">\n      <aside className=\"relative flex flex-col flex-shrink-0 w-56 border-r-1 border-gray-200 dark:border-gray-800\">\n        {children}\n      </aside>\n    </CSSTransition>\n  );\n};\n\nexport { AreaSecondary };\n","import React from 'react';\n\nexport type IMainAreaProps = {};\n\nconst MainArea: React.FC<IMainAreaProps> = ({ children }) => {\n  return (\n    <main\n      className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none g-gray-50 dark:bg-gray-900 \"\n      tabIndex={0}\n    >\n      {children}\n    </main>\n  );\n};\n\nexport { MainArea };\n","import { TagColor, TagIcon } from '../interfaces/INote.interface';\n\nexport const tagIconColorMap = {\n  [TagColor.default]: 'gray',\n  [TagColor.gray]: 'gray',\n  [TagColor.red]: 'red',\n  [TagColor.yellow]: 'yellow',\n  [TagColor.green]: 'green',\n  [TagColor.blue]: 'blue',\n  [TagColor.indigo]: 'indigo',\n  [TagColor.purple]: 'purple',\n  [TagColor.pink]: 'pink',\n};\n\nexport const noteIconColorMap = {\n  [TagColor.default]: 'gray',\n  [TagColor.gray]: 'gray',\n  [TagColor.red]: 'red',\n  [TagColor.yellow]: 'yellow',\n  [TagColor.green]: 'green',\n  [TagColor.blue]: 'blue',\n  [TagColor.indigo]: 'indigo',\n  [TagColor.purple]: 'purple',\n  [TagColor.pink]: 'pink',\n};\n\nexport const tagIconIconMap = {\n  [TagIcon.default]: (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      className=\"w-full\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n      />\n    </svg>\n  ),\n  [TagIcon.tag]: (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n      />\n    </svg>\n  ),\n  [TagIcon.hashtag]: (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={2}\n        d=\"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\"\n      />\n    </svg>\n  ),\n};\n","import React, { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  addTagActionLocal,\n  createTagAction,\n  createTagAndEditAction,\n  setTagModeAction,\n  updateTagVisibilityInFilterDropdownLocal,\n} from '../features/tags/TagsSlice';\nimport {\n  createTagDto,\n  INote,\n  Mode,\n  NoteAction,\n  NoteActionDto,\n  Tag,\n  TagColor,\n  TagEntity,\n  TagIcon,\n  UpdateNoteDTO,\n} from '../interfaces/INote.interface';\nimport { tagIconColorMap, tagIconIconMap } from './TagIcon';\nimport {\n  arrayOfMapToMapOfKeyValue,\n  mapOfKeyValueToArrayOfMap,\n} from '../app/utils';\nimport {\n  addNoteLocalAction,\n  addTagToNoteAction,\n  removeTagToNoteAction,\n  createTagAndAddToNoteAction,\n} from '../features/note/noteListSlice';\n\ninterface INewTagProps {\n  noteId: number;\n  tags: TagEntity[];\n  noteTags: Tag[];\n}\nconst NewTag: React.FC<INewTagProps> = ({ noteId }) => {\n  console.log('NewTag Component', noteId);\n\n  const dispatch = useDispatch();\n\n  const [isDropdownOpen, setIsDropDownOpen] = useState(false);\n\n  // Here we are taking tags from Redux state\n  const tagsFromReduxState = useSelector((state: RootState) => state.tags.tags);\n\n  // Transform the datastructure to a list of Tag\n  const tagsArray: Tag[] = mapOfKeyValueToArrayOfMap(tagsFromReduxState);\n\n  // Create a new internal state of tags from redux state tagsArray.\n  // This allows to filters internally\n  const [tags, setTags] = useState(tagsArray);\n  const [filterText, setFilterText] = useState(''); // Create also another internal state for the current text filter\n\n  // Here we need to update this new internal state when the redux state has changed.\n  // An example case of this, is when the dropdown is open, when we update tags outside (in the tag list component on the left)\n  // we need to get internal state of tags synchronized with the tags states from Redux in the tag list cmp.\n  // See https://stackoverflow.com/a/59174492/8000017\n  useEffect(() => {\n    const tagsArray: Tag[] = mapOfKeyValueToArrayOfMap(tagsFromReduxState);\n    // The redux state tags has changed, so we update the internal state\n    setTags(tagsArray);\n    filterList(tagsArray, filterText);\n  }, [tagsFromReduxState, filterText]);\n\n  /**\n   * useEffect to manage click outside dropdown to close it\n   */\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        if (isDropdownOpen) {\n          // Close the dropdown if opened\n          setIsDropDownOpen(false);\n        }\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownRef, isDropdownOpen]);\n\n  const inputFilterRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    if (isDropdownOpen) {\n      inputFilterRef.current.focus();\n    }\n  }, [isDropdownOpen]);\n\n  // const { mode } = state;\n  // const tags: Tag[] = [\n  //   { name: 'Tag 1', icon: TagIcon.default, color: TagColor.default },\n  //   { name: 'Tag 2', icon: TagIcon.hashtag, color: TagColor.indigo },\n  //   { name: 'Tag 2', icon: TagIcon.hashtag, color: TagColor.blue },\n  //   { name: 'Mon superbe tag 3', noteId: '1763', icon: TagIcon.hashtag, color: TagColor.blue },\n  //   { name: 'Mon beau tag 4', noteId: '1763', icon: TagIcon.hashtag, color: TagColor.blue },\n  // ];\n\n  const filterList = (tags: Tag[], filterText: string) => {\n    const regex = new RegExp(filterText, 'gi');\n    const tagsFiltered = tags.filter(({ name }) => {\n      return name.match(regex);\n    });\n    setTags(tagsFiltered);\n  };\n\n  const handleOnChange = (e: any) => {\n    const filterText = e.target.value;\n    setFilterText(filterText);\n    filterList(tagsArray, filterText);\n  };\n\n  const handleClickItem = (e: any, tag: Tag) => {\n    console.log('handleClickItem');\n    const visibility = !tag.visibleInFilterDropdown;\n    dispatch(updateTagVisibilityInFilterDropdownLocal(tag, visibility));\n    if (visibility) {\n      const noteActionDTO: NoteActionDto = {\n        actionType: NoteAction.AddTag,\n        noteId: noteId,\n        tagId: tag.id,\n      };\n      dispatch(addTagToNoteAction(noteActionDTO));\n    } else {\n      const noteActionDTO: NoteActionDto = {\n        actionType: NoteAction.RemoveTag,\n        noteId: noteId,\n        tagId: tag.id,\n      };\n      dispatch(removeTagToNoteAction(noteActionDTO));\n    }\n  };\n\n  const tagOptionHtml = (\n    <div className=\"p-2 px-4\">\n      <div className=\"flex items-center\">\n        <div className=\"mr-2\">Icon:</div>\n        {Object.keys(tagIconIconMap).map((tagIcon) => (\n          <button\n            className={`flex h-full py-2 w-4 mr-2 text-${\n              tagIconIconMap[TagColor.default]\n            }-500\n            `}\n          >\n            {tagIconIconMap[tagIcon]}\n          </button>\n        ))}\n      </div>\n      <div className=\"flex items-center\">\n        <div className=\"mr-2\">Color:</div>\n        {Object.keys(tagIconColorMap).map((tagIconColor) => {\n          return (\n            <button\n              className={`flex w-4 h-4 mr-2\n              rounded-full bg-${tagIconColorMap[tagIconColor]}-400\n              shadow-sm \n              focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 \n              focus:ring-offset-gray-100 \n              border border-indigo-300 dark:border-indigo-800\n              hover:border-black dark:hover:border-white\n              `}\n            ></button>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n  return (\n    <div key={`NewTag`} className=\"inline-flex h-full\">\n      <div className=\"relative inline-flex h-full\">\n        <div>\n          <button\n            type=\"button\"\n            className=\"inline-flex justify-center items-center w-full h-full px-2 py-0.5 rounded-md shadow-sm\n            text-sm font-medium focus:outline-none text-gray-700 dark:text-gray-200 \n            hover:bg-gray-50 dark:hover:bg-gray-900  \n            focus:ring-2 focus:ring-offset-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 focus:ring-offset-gray-100 \n            border border-indigo-300 dark:border-indigo-800\n            transition duration-500 ease-in-out\"\n            id=\"options-menu\"\n            // aria-haspopup=\"true\"\n            // aria-expanded=\"true\"\n            onClick={() => {\n              setIsDropDownOpen(!isDropdownOpen);\n            }}\n          >\n            <svg\n              className=\"h-4 w-4 text-indigo-400\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n              />\n            </svg>\n            <svg\n              className=\"h-4 w-4 text-indigo-400\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>\n            <svg\n              className=\"-mr-1 ml-2 h-5 w-5\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div\n          className={`origin-top-left absolute z-10 ${\n            !isDropdownOpen ? 'hidden' : ''\n          } left-0 w-72 rounded-md shadow-lg \n          bg-white dark:bg-black\n          ring-1 ring-black dark:ring-indigo-800\n          divide-y divide-gray-100 dark:divide-gray-900  `}\n          ref={dropdownRef}\n          role=\"menu\"\n          aria-orientation=\"vertical\"\n          aria-labelledby=\"options-menu\"\n          onBlur={(e: any) => {\n            if (!e.currentTarget.contains(e.relatedTarget)) {\n              // Blur outside the dropdown\n              setIsDropDownOpen(false);\n            }\n          }}\n        >\n          <div className=\"relative flex align-middle h-full\">\n            <div\n              className={`absolute top-0 left-4 flex h-full z-10 py-2 w-4 mr-2 text-${\n                tagIconColorMap[TagColor.default]\n              }-500`}\n            >\n              {tagIconIconMap.DEFAULT}\n            </div>\n            <input\n              autoFocus\n              ref={inputFilterRef}\n              value={filterText}\n              onChange={handleOnChange}\n              className=\"w-full border-0 bg-transparent pl-10\n              text-sm focus:outline-none text-gray-500 font-extralight\n              rounded-md\n              focus:ring-1 ring-offset-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 focus:text-black dark:focus:text-white\"\n              type=\"text\"\n            />\n            {tags.length === 0 && (\n              <button\n                type=\"button\"\n                className=\"absolute top-0 right-0 flex h-full py-2 \n              items-center px-2 rounded-md rounded-l-none shadow-sm\n              text-xs focus:outline-none text-gray-700 dark:text-gray-200 \n              hover:bg-gray-50 dark:hover:bg-gray-900  \n              focus:ring-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 focus:ring-offset-gray-100 \n              ring-1 ring-black dark:ring-indigo-800\n              \"\n                aria-haspopup=\"true\"\n                aria-expanded=\"true\"\n                onClick={() => {\n                  console.log('on click');\n                  const noteActionDTO: NoteActionDto = {\n                    actionType: NoteAction.CreateTagAndAddToNote,\n                    noteId: noteId,\n                    tagName: filterText,\n                  };\n                  const action: any = dispatch(\n                    createTagAndAddToNoteAction(noteActionDTO)\n                  );\n                  action.then((action: any) => {\n                    if (!action.error) {\n                      const tag: Tag = action.payload.tag;\n                      const note: INote = action.payload.note;\n                      dispatch(addTagActionLocal(tag));\n                      dispatch(addNoteLocalAction(note));\n                      inputFilterRef.current?.focus();\n                    } else {\n                      console.warn('err', action.error);\n                      // TODO: Throw user message\n                    }\n                  });\n                }}\n              >\n                Add\n              </button>\n            )}\n          </div>\n          <div className=\"\">\n            {tags.length === 0 && tagOptionHtml}\n            {tags.map((tag) => {\n              const { name, color, visibleInFilterDropdown } = tag;\n\n              return (\n                <button\n                  key={`newtag-${tag.id}`}\n                  className=\"flex w-full px-4 py-2 items-center text-sm text-gray-700 hover:text-black dark:hover:text-white\n                  rounded-md\n                  focus:outline-none focus:ring-1\n                  focus:ring-indigo-500 dark:focus:ring-offset-indigo-800 focus:text-black dark:focus:text-white\"\n                  onClick={(e) => {\n                    handleClickItem(e, tag);\n                  }}\n                >\n                  <div\n                    className={`flex relative w-4 h-4 mr-2 text-${tagIconColorMap[color]}-500`}\n                  >\n                    {tagIconIconMap.DEFAULT}\n                  </div>\n                  <div className=\"flex-1 text-left\">{name}</div>\n                  {visibleInFilterDropdown && (\n                    <div className=\"flex flex-shrink-0\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        className=\"w-4 h-4\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                    </div>\n                  )}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { NewTag };\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { RootState } from '../app/rootReducer';\nimport { mapOfKeyValueToArrayOfMap } from '../app/utils';\nimport { updateNoteThunk } from '../features/note/noteListSlice';\nimport {\n  INote,\n  NoteColor,\n  TagEntity,\n  UpdateNoteDTO,\n} from '../interfaces/INote.interface';\nimport { NewTag } from './NewTag';\nimport { tagIconColorMap, tagIconIconMap, noteIconColorMap } from './TagIcon';\n\ninterface INoteTagsProps {}\n\nconst NoteTags: React.FC<INoteTagsProps> = ({}) => {\n  console.log('NoteTags');\n  const dispatch = useDispatch();\n  const { notes } = useSelector((state: RootState) => state.notes);\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n  const tags = useSelector((state: RootState) => state.tags.tags);\n  const note: INote | null = selectedNoteId ? notes[selectedNoteId] : null;\n  const tagsList: TagEntity[] = mapOfKeyValueToArrayOfMap(tags);\n  const noteTags = note?.tags;\n  const noteId = note?.id;\n  const [isColorDropDownOpen, setIsColorDropDownOpen] = useState(false);\n  const dropdownColorRef = useRef(null);\n  const firstDropDownColorItemRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event: any) {\n      if (\n        dropdownColorRef.current &&\n        !dropdownColorRef.current.contains(event.target)\n      ) {\n        if (isColorDropDownOpen) {\n          // Close the dropdown if opened\n          setIsColorDropDownOpen(false);\n        }\n      }\n    }\n    if (isColorDropDownOpen) {\n      firstDropDownColorItemRef.current?.focus();\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [dropdownColorRef, isColorDropDownOpen]);\n\n  // Note: This is required to manage border-left / border-right / radius left / radius right, because of the use\n  // of Utility css....\n  // In standard CSS, it will be managed with :firsts-child and :last-child\n  const getTagClassName = (tags: TagEntity[], name: string, index: number) => {\n    let noteClassName =\n      'flex items-center px-2 py-0.5 rounded border border-indigo-100 dark:border-indigo-800 text-xs font-medium dark:text-indigo-100';\n\n    if (tags.length === 0) {\n    } else if (tags.length === 1) {\n      noteClassName += '';\n    } else if (tags.length > 0 && index === 0) {\n      noteClassName += ' border-r-0 rounded-r-none';\n    } else if (tags.length > 0 && index > 0 && index < tags.length - 1) {\n      noteClassName += ' border-r-0 rounded-r-none rounded-l-none';\n    } else if (tags.length > 0 && index === tags.length - 1) {\n      noteClassName += ' rounded-l-none';\n    }\n\n    return noteClassName;\n  };\n\n  const handleFavClick = (e: React.MouseEvent<HTMLElement>) => {\n    console.log('handleFavClick');\n    if (note) {\n      const noteId = note.id;\n      const isFav = note.isFav;\n      const updateNoteDTO: UpdateNoteDTO = {\n        isFav: !isFav,\n      };\n\n      dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: true }));\n    }\n  };\n\n  const noteColor = note?.color;\n  let noteColorCSS = 'GRAY';\n  if (noteColor) {\n    noteColorCSS = noteIconColorMap[noteColor];\n  }\n\n  return (\n    <div\n      key={`NoteTags`}\n      className=\"\"\n      style={{\n        width: '482px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      }}\n    >\n      <div className=\"flex flex-col space-y-4 sm:space-y-0 sm:flex-row sm:space-x-4 mb-2 select-none\">\n        <div className=\"inline-flex\">\n          <div title=\"Color\" className=\"relative inline-flex items-center\">\n            <button\n              className=\"flex h-full items-center px-2 py-0.5 first-child:border-r-0 rounded rounded-r-none\n              text-xs font-medium dark:text-indigo-100\n              shadow-sm \n              focus:outline-none focus:ring-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 \n              focus:ring-offset-gray-100 \n              border border-indigo-300 dark:border-indigo-800\n              hover:bg-indigo-50 dark:hover:bg-indigo-900\n              transition duration-500 ease-in-out\"\n              onClick={(e) => {\n                setIsColorDropDownOpen(!isColorDropDownOpen);\n              }}\n            >\n              <div\n                className={`w-3 h-3 rounded-full bg-${noteColorCSS}-500 transition duration-500 ease-in-out`}\n              ></div>\n            </button>\n            <CSSTransition\n              in={isColorDropDownOpen}\n              timeout={400}\n              classNames=\"dropdown\"\n              unmountOnExit\n            >\n              <div\n                className={`absolute top-8 z-10 left-0 \n               \n                p-4 bg-white rounded-md dark:bg-black border border-indigo-700 shadow-md`}\n                ref={dropdownColorRef}\n                onBlur={(e: any) => {\n                  if (!e.currentTarget.contains(e.relatedTarget)) {\n                    setIsColorDropDownOpen(false);\n                  }\n                }}\n              >\n                <div className=\"flex\">\n                  {Object.keys(tagIconColorMap).map((tagIconColor, index) => {\n                    let el = null;\n                    if (index === 0) {\n                      el = (\n                        <button\n                          ref={firstDropDownColorItemRef}\n                          className={`flex w-4 h-4 mr-2\n              rounded-full bg-${tagIconColorMap[tagIconColor]}-400\n              shadow-sm \n              focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 \n              focus:ring-offset-gray-100 \n              border border-indigo-300 dark:border-indigo-800\n              hover:bg-indigo-50 dark:hover:bg-indigo-900\n              `}\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                            className=\"text-gray-700\"\n                          >\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth={2}\n                              d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n                            />\n                          </svg>\n                        </button>\n                      );\n                    } else {\n                      el = (\n                        <button\n                          className={`flex w-4 h-4 mr-2\n              rounded-full bg-${tagIconColorMap[tagIconColor]}-400\n              shadow-sm \n              focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 \n              focus:ring-offset-gray-100 \n              border border-indigo-300 dark:border-indigo-800\n              hover:border-black dark:hover:border-white\n              `}\n                          icon-color={tagIconColor}\n                          onClick={(e: React.MouseEvent<HTMLElement>) => {\n                            console.log('e', e);\n                            const iconColor = e.currentTarget.getAttribute(\n                              'icon-color'\n                            );\n\n                            const noteId = note?.id;\n                            const updateNoteDTO: UpdateNoteDTO = {\n                              color: iconColor,\n                            };\n                            dispatch(\n                              updateNoteThunk({\n                                noteId,\n                                updateNoteDTO,\n                                serverSync: true,\n                              })\n                            );\n                          }}\n                        ></button>\n                      );\n                    }\n                    return el;\n                  })}\n                </div>\n              </div>\n            </CSSTransition>\n          </div>\n\n          <button\n            title=\"fav\"\n            className=\"inline-flex items-center px-2 py-0.5 first-child:border-r-0 rounded rounded-l-none\n            text-xs font-medium dark:text-indigo-100\n            shadow-sm \n            focus:outline-none focus:ring-1 focus:ring-indigo-500 dark:focus:ring-offset-gray-800 \n            focus:ring-offset-gray-100 \n            border border-l-0 border-indigo-300 dark:border-indigo-800\n            hover:bg-indigo-50 dark:hover:bg-indigo-900\n            transition duration-500 ease-in-out\"\n            onClick={handleFavClick}\n          >\n            <CSSTransition in={note?.isFav} timeout={400} classNames=\"fav\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-4 w-4 text-indigo-400\"\n                fill={`${note?.isFav ? '#6366f1' : 'none'}`}\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                />\n              </svg>\n            </CSSTransition>\n          </button>\n        </div>\n        <div className=\"inline-flex\">\n        {/* <TransitionGroup className=\"inline-flex\"> */}\n          {noteTags &&\n            noteTags.map(({ id, name }, index) => (\n              // <CSSTransition key={id} timeout={400} classNames=\"note-tag-tiny\">\n                <div\n                  key={`notetag-${id}`}\n                  className={getTagClassName(noteTags, name, index)}\n                >\n                  <svg\n                    className=\"mr-1.5 h-2 w-2 text-indigo-400\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 8 8\"\n                  >\n                    <circle cx=\"4\" cy=\"4\" r=\"3\" />\n                  </svg>\n                  {name}\n                </div>\n              // </CSSTransition>\n            ))}\n        {/* </TransitionGroup> */}\n        </div>\n        {noteTags && (\n          <NewTag noteId={Number(noteId)} tags={tagsList} noteTags={noteTags} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport { NoteTags };\n","import React, { useEffect, Suspense, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  fetchNoteThunk,\n  updateNoteThunk,\n} from '../features/note/noteListSlice';\nimport { Tag, UpdateNoteDTO } from '../interfaces/INote.interface';\n// import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { NewTag } from './NewTag';\nimport { NoteTags } from './NoteTags';\n\nconst scrollbar = require('smooth-scrollbar-react');\nconst ScrollBar = scrollbar.default;\n\ninterface INoteDetailProps {}\n\nconst NoteDetailEdit: React.FC<INoteDetailProps> = ({}) => {\n  console.log('NoteDetailEdit');\n\n  // const delay = 5;\n  const dispatch = useDispatch();\n  const { error, isLoading, notes } = useSelector(\n    (state: RootState) => state.notes\n  );\n  // const [show, setShow] = useState(false);\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n\n  const contentRef = useRef<HTMLDivElement>(null);\n  // const contentRef2 = React.createRef();\n  const titleRef = useRef<HTMLDivElement>(null);\n\n  const handleContentBlur = (e: React.FocusEvent<HTMLDivElement>) => {\n    const noteId = selectedNoteId;\n    const content = contentRef.current?.innerText;\n\n    const updateNoteDTO: UpdateNoteDTO = {\n      content: content,\n    };\n    dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: true }));\n  };\n\n  // const handleContentKeyUp = (e: React.KeyboardEvent) => {\n  //   console.log('key up', e);\n\n  //   const noteId = selectedNoteId;\n  //   const input = e.target as HTMLElement;\n  //   const updateNoteDTO: UpdateNoteDTO = {\n  //     content: input.innerText,\n  //   };\n  //   dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: false }));\n  //   contentRef.current?.focus();\n  // };\n\n  const handleTitleBlur = (e: React.FocusEvent<HTMLDivElement>) => {\n    const noteId = selectedNoteId;\n    const updateNoteDTO: UpdateNoteDTO = {\n      name: titleRef.current?.innerText,\n    };\n    dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: true }));\n  };\n\n  // TODO showLoading\n  const showLoading = true;\n  const note = selectedNoteId ? notes[selectedNoteId] : null;\n \n\n  useEffect(() => {\n    console.log('#notedetail effect selectedNoteId', selectedNoteId);\n\n    if (selectedNoteId) {\n      dispatch(fetchNoteThunk(selectedNoteId));\n    }\n    if (note?.content === '') {\n      // Focus on content when note has no content (new note)\n      contentRef.current?.focus();\n    }\n    \n  }, [dispatch, selectedNoteId]);\n\n  if (error) {\n    return (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        {error}\n      </p>\n    );\n  }\n  if (isLoading && showLoading) {\n    return (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        Loading\n      </p>\n    );\n  } else {\n    // Note: This is required to manage border-left / border-right / radius left / radius right, because of the use\n    // of Utility css....\n    // In standard CSS, it will be managed with :firsts-child and :last-child\n    const getTagClassName = (notes: Tag[], name: string, index: number) => {\n      let noteClassName =\n        'inline-flex items-center px-2 py-0.5 rounded border border-indigo-100 dark:border-indigo-800 text-xs font-medium dark:text-indigo-100';\n\n      if (notes.length === 0) {\n      } else if (notes.length > 0 && index === 0) {\n        noteClassName += ' border-r-0 rounded-r-none';\n      } else if (notes.length > 0 && index === notes.length - 1) {\n        noteClassName += ' rounded-l-none';\n      }\n\n      return noteClassName;\n    };\n    return (\n      <>\n        {/* <CSSTransition in={selectedNoteId} timeout={400} classNames=\"noteDetail\"> */}\n        {/* <div className=\"relative\"> */}\n        {/* <Suspense fallback={<div>Chargement</div>}> */}\n        {/* <ScrollBar damping={0.5} thumbMinSize={20}> */}\n        <div className=\"flex h-full p-16 base-style bg-gray-50 dark:text-gray-300 dark:bg-gray-900\">\n          {note ? (\n            <div\n              className=\"\"\n              style={{\n                width: '482px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            >\n              <NoteTags />\n              <h1\n                className=\"max-w-lg outline-none cursor-default text-4xl font-semibold\"\n                onBlur={handleTitleBlur}\n                placeholder=\"Titre\"\n                ref={titleRef}\n                contentEditable={true}\n                dangerouslySetInnerHTML={{ __html: note?.name || '' }}\n              ></h1>\n              <div\n                className=\"max-w-lg text-justify outline-none cursor-default font-thin\"\n                onBlur={handleContentBlur}\n                // onKeyUp={handleContentKeyUp}\n                placeholder=\"Le contenu de ma superbe note\"\n                ref={contentRef}\n                contentEditable={true}\n                dangerouslySetInnerHTML={{ __html: note?.content || '' }}\n              ></div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        {/* </ScrollBar> */}\n        {/* </Suspense> */}\n        {/* </div> */}\n        {/* </CSSTransition> */}\n      </>\n    );\n  }\n};\n\nexport { NoteDetailEdit };\n","import React, { useEffect } from 'react';\nimport { NoteItem } from '../../components/NoteItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { fetchNotes } from './noteListSlice';\nimport { AreaSecondary } from '../../components/AreaSecondary';\nimport { NoteFilter } from '../../components/NoteFilter';\nimport { MainArea } from '../../components/MainArea';\nimport { Toolbar } from '../../components/Toolbar';\nimport { NoteDetailEdit } from '../../components/NoteDetailEdit';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { LOCAL_STORAGE_NOTES_KEY } from '../../constants';\nimport MainTemplate from '../../components/MainTemplate';\nimport { INote } from '../../interfaces/INote.interface';\n// const scrollbar = require('smooth-scrollbar-react');\n// const ScrollBar = scrollbar.default;\n\ninterface INoteProps {}\n\nconst NoteList: React.FC<INoteProps> = () => {\n  const dispatch = useDispatch();\n  const { error, isLoading, notes } = useSelector(\n    (state: RootState) => state.notes\n  );\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_NOTES_KEY, JSON.stringify(notes));\n  }, [notes]);\n\n  // TODO: Mutualize generic vector->map-of-kv\n  const acc: INote[] = [];\n  const notesList = Object.keys(notes)\n    .reduce((acc, v) => {\n      if (notes[v]) {\n        acc.push(notes[v]);\n      }\n      return acc;\n    }, acc)\n    .sort((a, b) => {\n      return Number(b.id) - Number(a.id);\n    }); // TODO: refactor sorting\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  let noteListHtml = null;\n  // let match = useRouteMatch();\n\n  if (error) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        {error}\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        Loading\n      </p>\n    );\n  } else {\n    noteListHtml = (\n      /* <ScrollBar damping={0.5} thumbMinSize={20}> */\n      <TransitionGroup\n        component=\"ul\"\n        className=\"overflow-auto divide-y-1 divide-gray-200 dark:divide-gray-800\"\n        type=\"ul\"\n      >\n        {notesList.map(\n          ({\n            id,\n            name,\n            content,\n            createDate,\n            updateDate,\n            tags,\n            color,\n            isFav,\n          }) => {\n            return (\n              <CSSTransition key={id} timeout={400} classNames=\"item\">\n                {/* <div>a</div> */}\n                <NoteItem\n                  key={id}\n                  id={id}\n                  createDate={createDate}\n                  updateDate={updateDate}\n                  name={name}\n                  tags={tags}\n                  content={content}\n                  isSelected={true}\n                  color={color}\n                  isFav={isFav}\n                ></NoteItem>\n              </CSSTransition>\n            );\n          }\n        )}\n      </TransitionGroup>\n    );\n  }\n\n  return (\n    <MainTemplate>\n      <div className=\"flex w-full flex-col\">\n        <div>\n          <Toolbar />\n        </div>\n        <div className=\"flex h-full\">\n          <AreaSecondary>\n            <NoteFilter />\n            {noteListHtml}\n          </AreaSecondary>\n          <MainArea>\n            <NoteDetailEdit />\n          </MainArea>\n        </div>\n      </div>\n    </MainTemplate>\n  );\n};\n\nexport { NoteList };\n","export default __webpack_public_path__ + \"static/media/notizen-icon.658e43aa.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { HOST_URL } from '../../app/utils';\nimport loginBackgroundImage from './../../assets/notizen-icon.svg';\n\nexport type IAuthProps = {};\n\nconst Auth: React.FC<IAuthProps> = ({}) => {\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-black flex\">\n      <div className=\"flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24\">\n        <div className=\"mx-auto w-full max-w-sm lg:w-96\">\n          <div>\n            <img\n              className=\"h-12 w-auto\"\n              src={loginBackgroundImage}\n              alt=\"Workflow\"\n            />\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-gray-100\">\n              Sign in to your account\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400max-w\">\n              Or\n              <a\n                href=\"#\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500 dark:text-indigo-300\"\n              >\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n          <div className=\"mt-8\">\n            <div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-700 dark:text-gray-200\">\n                  Sign in with\n                </p>\n                <div className=\"mt-1 grid grid-cols-3 gap-3\">\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-black text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                    >\n                      <div className=\"sr-only\">Sign in with Facebook</div>\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        aria-hidden=\"true\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </a>\n                  </div>\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm bg-white dark:bg-black text-sm font-medium text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-900\"\n                    >\n                      <div className=\"sr-only\">Sign in with Twitter</div>\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        aria-hidden=\"true\"\n                      >\n                        <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\n                      </svg>\n                    </a>\n                  </div>\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm bg-white dark:bg-black text-sm font-medium text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-900\"\n                    >\n                      <div className=\"sr-only\">Sign in with GitHub</div>\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        aria-hidden=\"true\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-6 relative\">\n                <div\n                  className=\"absolute inset-0 flex items-center\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <div className=\"px-2 bg-white dark:bg-black text-gray-500\">\n                    Or continue with\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-6\">\n              <form action=\"#\" method=\"POST\" className=\"space-y-6\">\n                <div>\n                  <label\n                    htmlFor=\"email\"\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                  >\n                    Email address\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      required\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-600 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n                  <label\n                    htmlFor=\"password\"\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                  >\n                    Password\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      required\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-600 hodlder-gray focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <input\n                      id=\"remember_me\"\n                      name=\"remember_me\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 text-indigo-600 dark:text-indigo-400 focus:ring-indigo-500 border-gray-300 dark:border-gray-600 rounded\"\n                    />\n                    <label\n                      htmlFor=\"remember_me\"\n                      className=\"ml-2 block text-sm text-gray-900 dark:text-gray-50\"\n                    >\n                      Remember me\n                    </label>\n                  </div>\n                  <div className=\"text-sm\">\n                    <a\n                      href=\"#\"\n                      className=\"font-medium text-indigo-600 dark:text-indigo-400 hover:text-indigo-500\"\n                    >\n                      Forgot your password?\n                    </a>\n                  </div>\n                </div>\n                <div>\n                  <Link to={`${HOST_URL}/note`}>\n                  {/* <Link to=\"/note\"> */}\n                    <button\n                      type=\"submit\"\n                      className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white dark:text-black bg-indigo-600 dark:bg-indigo-400 hover:bg-indigo-700 dark:hover:bg-indigo-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      Sign in\n                    </button>\n                  </Link>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hidden lg:block relative w-0 flex-1 dark:bg-indigo-900\">\n        {/* <iframe\n          src=\"https://player.vimeo.com/video/430522320\"\n          width=\"640\"\n          height=\"360\"\n          style={{ width: '158%', height: '100%' }}\n        ></iframe> */}\n        <img\n          className=\"absolute inset-0 h-full w-full object-cover\"\n          style={{ height: '200%' }}\n          src={loginBackgroundImage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { Auth };\n","import React from 'react';\r\nimport { Note } from '@notizen/frontend-common/features/note/Note';\r\nimport { Auth } from '@notizen/frontend-common/features/auth/Auth';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport { HOST_URL } from './utils';\r\n\r\nconsole.log('HOST_URL', HOST_URL);\r\n\r\nconst routes = [\r\n  { path: `${HOST_URL}/`, name: 'Home', Component: Auth },\r\n  // { path: \"/\", name: 'Home', Component: Auth },\r\n  { path: `${HOST_URL}/auth`,  name: 'Auth', Component: Auth },\r\n  // { path: \"/auth\",  name: 'Auth', Component: Auth },\r\n  { path: `${HOST_URL}/note`,  name: 'Note', Component: Note },\r\n  // { path: \"/note\",  name: 'Note', Component: Note },\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"relative\">\r\n        <Router>\r\n          {routes.map(({ path, Component }) => (\r\n            // <Route key={path} exact path={path}>\r\n\r\n            <Route key={path} path={path}>\r\n              {({ match }) => (\r\n                <CSSTransition\r\n                  in={match != null}\r\n                  timeout={400}\r\n                  classNames=\"page\"\r\n                  unmountOnExit\r\n                >\r\n                  <div className=\"page\">\r\n                    <Component />\r\n                  </div>\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          ))}\r\n        </Router>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect } from 'react';\nimport { NoteItem } from '../../components/NoteItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { fetchNotes } from './noteListSlice';\nimport { AreaSecondary } from '../../components/AreaSecondary';\nimport MainTemplate from '../../components/MainTemplate';\nimport { NoteThumb } from '@notizen/frontend-common/features/note/NoteThumb';\nimport { NoteList } from '@notizen/frontend-common/features/note/NoteList';\n// import { NoteLit } from '@notizen/frontend-common/features/note/NoteLit';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HOST_URL } from '../../app/utils';\n\ninterface INoteProps {}\n\nconst Note: React.FC<INoteProps> = () => {\n  return (\n    <Switch>\n      <Route exact path={`${HOST_URL}/note`}>\n        <NoteList />\n      </Route>\n      <Route exact path={`${HOST_URL}/note/note-list`}>\n        <NoteList />\n      </Route>\n      <Route exact path={`${HOST_URL}/note/note-thumb`}>\n        <NoteThumb />\n      </Route>\n    </Switch>\n  );\n};\n\nexport { Note };\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store } from '@notizen/frontend-common/app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker.js';\r\nimport '@notizen/frontend-common/index.css';\r\nimport App from '@notizen/frontend-common/app/App';\r\n\r\n// Debug\r\ndeclare global {\r\n  interface Window { store: any; }\r\n}\r\n\r\nwindow.store = store || {};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}