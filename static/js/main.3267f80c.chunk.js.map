{"version":3,"sources":["../../common/assets/notizen.svg","../../common/assets/notizen-dark.svg","../../common/api/notizenAPI.ts","../../common/constants.ts","../../common/interfaces/INote.interface.ts","../../common/features/note/noteListSlice.ts","../../common/app/utils.ts","../../common/features/tags/TagsSlice.ts","../../common/app/rootReducer.ts","../../common/app/store.ts","serviceWorker.js","../../common/components/NoteItemThumb.tsx","../../common/components/NoteFilter.tsx","../../common/features/tags/Tag.tsx","../../common/features/tags/Tags.tsx","../../common/components/UserProfileCard.tsx","../../common/components/SidebarDesktop.tsx","../../common/components/Logo.tsx","../../common/components/Menu.tsx","../../common/components/SidebarClose.tsx","../../common/components/UserProfileCardMobile.tsx","../../common/components/MenuMobile.tsx","../../common/components/MainTemplate.tsx","../../common/components/Toolbar.tsx","../../common/features/note/NoteThumb.tsx","../../common/components/NoteItem.tsx","../../common/components/AreaSecondary.tsx","../../common/components/MainArea.tsx","../../common/components/NewTag.tsx","../../common/components/NoteDetailEdit.tsx","../../common/features/note/NoteList.tsx","../../common/assets/notizen-icon.svg","../../common/features/auth/Auth.tsx","../../common/app/App.tsx","../../common/features/note/Note.tsx","index.tsx"],"names":["API_URL","withDebug","url","debug","debugThrowError","a","includes","withUrl","console","log","getNotes","axios","get","notesReponse","noteAcc","notes","data","reduce","m","note","id","getNoteByNoteId","noteId","createNote","createNoteDTO","post","response","deleteNote","delete","error","updateNote","updateNoteDTO","patch","getTags","tagsResponse","tagsAcc","tags","tag","createTag","createTagDto","updateTag","tagId","updateTagDto","deleteTag","Mode","LOCAL_STORAGE_NOTES_KEY","notesInitialData","localStorageData","window","localStorage","getItem","JSON","parse","getNotesFromLocalStorage","initialNotesState","isLoading","notesCache","selectedNoteId","setSelectedNoteId","createAction","payload","fetchNoteThunk","createAsyncThunk","fetchNotes","thunkAPI","deleteNoteThunk","createNoteThunk","updateNoteThunk","UpdateNoteDTO","serverSync","noteDetailResultPromise","Promise","resolve","reject","createSlice","name","initialState","extraReducers","builder","addCase","state","action","pending","meta","arg","newNotes","fulfilled","rejected","Object","keys","length","newNote","noteCached","reducers","hashCode","str","i","hash","charCodeAt","initialTagsState","selectedTagId","tagsCache","deleteModeActive","editModeActive","mode","Default","fetchTags","setTagModeAction","setMode","updateTagLocal","resetUpdateTag","createTagAction","updateTagAction","deleteTagAction","createTagAndEditAction","dispatch","then","warn","Edit","requestId","tempTagId","createDate","Date","updateDate","isActive","acc","k","Number","String","newTag","newTags","rootReducer","combineReducers","notesReducer","tagsReducer","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","NoteItemThumb","text","title","useDispatch","className","useSelector","tagColorClassName","Math","round","random","style","fontSize","NoteFilter","htmlFor","type","placeholder","x-description","xmlns","viewBox","fill","aria-hidden","fillRule","d","clipRule","TagComponent","tagMode","tagComponent","href","onDoubleClick","stroke","strokeLinecap","strokeLinejoin","strokeWidth","onClick","e","stopPropagation","Delete","value","autoFocus","onChange","updatedTag","target","onBlur","onKeyDown","keyCode","Tags","tagsList","v","push","sort","b","useEffect","TransitionGroup","component","map","CSSTransition","timeout","classNames","UserProfileCard","src","alt","SidebarDesktop","useState","matchMedia","matches","isColorSchemeDark","setColorSchemeDark","list","handler","addListener","removeListener","logoSrc","require","default","width","aria-label","label","selected","Logo","logo","Menu","SidebarClose","UserProfileCardMobile","MenuMobile","tabIndex","MainTemplate","children","Toolbar","floor","content","height","aria-haspopup","role","aria-orientation","aria-labelledby","display","to","activeClassName","NoteThumb","setItem","stringify","notesList","noteListHtml","useRouteMatch","color","isSelected","NoteItem","itemCls","itemInnerCls","num","zIndex","note-id","dateTime","slice","AreaSecondary","inProp","setInProp","in","MainArea","NewTag","aria-expanded","NoteDetailEdit","contentRef","useRef","titleRef","marginLeft","marginRight","caretColor","cx","cy","r","current","innerText","ref","contentEditable","dangerouslySetInnerHTML","__html","NoteList","Auth","loginBackgroundImage","method","autoComplete","required","routes","path","Component","exact","App","unmountOnExit","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","checkValidServiceWorker","ready"],"mappings":"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","file":"static/js/main.3267f80c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/notizen.76baddb4.svg\";","export default __webpack_public_path__ + \"static/media/notizen-dark.de4a63eb.svg\";","/**\n * API related functions here.\n */\n\nimport axios from 'axios';\nimport {\n  Notes,\n  UpdateNoteDTO,\n  CreateNoteDTO,\n  INote,\n  NoteDetailResult,\n  NotesResult,\n  TagsResult,\n  Tag,\n  Tags,\n  updateTagDto,\n  TagResult,\n  createTagDto,\n} from '../interfaces/INote.interface';\n\n/* ----------------- debug ------------------------- */\nconst DEBUG = false;\n// const API_URL = 'http://localhost:3000';\nconst API_URL = 'https://notizenapp-306803.ew.r.appspot.com';\nconst withDebug = (url: string, debug: boolean, debugThrowError: boolean) => {\n  if (debug) {\n    const a = url.includes('?') ? '&' : '?';\n    url += a + 'debug=true' + (debugThrowError ? '&debugThrowError=true' : '');\n  }\n  return url;\n};\nconst withUrl = (url: string, debugThrowError: boolean = false) => {\n  console.log('withUrl', debugThrowError);\n\n  return withDebug(url, DEBUG, debugThrowError);\n};\n\n/* ----------------- note ------------------------- */\nexport async function getNotes(): Promise<NotesResult> {\n  const url = withUrl(`${API_URL}/notes?limit=100`);\n  try {\n    const notesReponse = await axios.get<INote[]>(url);\n    const noteAcc: Notes = {};\n    const notes = notesReponse.data.reduce((m, note) => {\n      m[note.id] = note;\n      return m;\n    }, noteAcc);\n\n    return {\n      notes: notes,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getNoteByNoteId(\n  noteId: string\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}`);\n  try {\n    const notesReponse = await axios.get<INote>(url);\n    return {\n      note: notesReponse.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function createNote(\n  createNoteDTO: CreateNoteDTO\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes`);\n  try {\n    const response = await axios.post<INote>(url, createNoteDTO);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function deleteNote(noteId: string): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}`);\n  try {\n    const response = await axios.delete<INote>(url);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    console.error('Une erreur est survenue', err);\n    throw err;\n  }\n}\n\nexport async function updateNote(\n  noteId: number,\n  updateNoteDTO: UpdateNoteDTO\n): Promise<NoteDetailResult> {\n  const url = withUrl(`${API_URL}/notes/${noteId}`);\n  try {\n    const response = await axios.patch<INote>(url, updateNoteDTO);\n    return {\n      note: response.data,\n    };\n  } catch (err) {\n    console.error('Une erreur est survenue', err);\n    throw err;\n  }\n}\n\n/* ----------------- tags ------------------------- */\nexport async function getTags(): Promise<TagsResult> {\n  const url = withUrl(`${API_URL}/tags?limit=100`);\n\n  try {\n    const tagsResponse = await axios.get<Tag[]>(url);\n    const tagsAcc: Tags = {};\n    const tags = tagsResponse.data.reduce((m, tag) => {\n      m[tag.id] = tag;\n      return m;\n    }, tagsAcc);\n\n    return {\n      tags: tags,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function createTag(\n  createTagDto: createTagDto\n): Promise<TagResult> {\n  const url = withUrl(`${API_URL}/tags/`, true);\n  try {\n    const response = await axios.post<Tag>(url, createTagDto);\n    return {\n      tag: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function updateTag(\n  tagId: number,\n  updateTagDto: updateTagDto\n): Promise<TagResult> {\n  const url = withUrl(`${API_URL}/tags/${tagId}`);\n  try {\n    const response = await axios.patch<Tag>(url, updateTagDto);\n    return {\n      tag: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function deleteTag(tagId: number): Promise<TagResult> {\n  const url = withUrl(`${API_URL}/tags/${tagId}`, true);\n  try {\n    const response = await axios.delete(url);\n    return {\n      tag: response.data,\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n","export const LOCAL_STORAGE_NOTES_KEY = 'notizen-notes';","/**\n * Interfaces should be shared between frontend and backend (domain ?).\n */\n\n// Notes ------------------------\nexport interface INote {\n  id: string;\n  name?: string;\n  content?: string;\n  createDate: Date;\n  updateDate: Date;\n}\n\nexport interface Notes {\n  [key: string]: INote;\n}\n\nexport interface NoteDetailResult {\n  note: INote;\n}\n\nexport interface NotesResult {\n  notes: Notes;\n}\n\nexport interface UpdateNoteDTO {\n  name?: string;\n  content?: string;\n}\nexport interface CreateNoteDTO {\n  name?: string;\n  content?: string;\n}\n\n// Tag ------------------------\n// TODO: Share with backend\nexport interface TagEntity {\n  id: number;\n  name: string;\n  isActive: boolean;\n  createDate: Date;\n  updateDate: Date;\n}\n\nexport enum Mode {\n  Default = 'DEFAULT',\n  Edit = 'EDIT',\n  Delete = 'DELETE',\n}\n\nexport interface Tag extends TagEntity {\n  mode: Mode\n}\n\nexport interface Tags {\n  [key: string]: Tag;\n}\n\nexport interface TagsResult {\n  tags: Tags;\n}\n\nexport interface TagResult {\n  tag: Tag;\n}\n\nexport interface updateTagDto {\n  name: string;\n}\n\nexport interface createTagDto {\n  name: string;\n}","import {\n  createSlice,\n  PayloadAction,\n  createAsyncThunk,\n  createAction,\n} from '@reduxjs/toolkit';\nimport {\n  createNote,\n  deleteNote,\n  getNoteByNoteId,\n  getNotes,\n  updateNote,\n} from '../../api/notizenAPI';\nimport {\n  NoteDetailResult,\n  CreateNoteDTO,\n} from '../../interfaces/INote.interface';\nimport { LOCAL_STORAGE_NOTES_KEY } from '../../constants';\nimport { Notes } from '../../interfaces/INote.interface';\n\n// TODO: See https://codesandbox.io/s/ihttc?file=/src/app/store.ts\n// and https://github.com/jerrynavi/diaries-app/tree/master/src/features\n\ninterface NoteListState {\n  isLoading: boolean;\n  error: string | null;\n  notes: Notes;\n  notesCache: Notes;\n  selectedNoteId: string | null;\n}\n\nconst getNotesFromLocalStorage = () => {\n  const localStorageData = window.localStorage.getItem(LOCAL_STORAGE_NOTES_KEY);\n  return localStorageData ? JSON.parse(localStorageData) : {};\n};\nconst notesInitialData = getNotesFromLocalStorage();\n\nconst initialNotesState: NoteListState = {\n  isLoading: false,\n  error: null,\n  notes: notesInitialData,\n  notesCache: notesInitialData,\n  selectedNoteId: null,\n};\n\nexport const setSelectedNoteId = createAction(\n  'notes/setSelectedNoteId',\n  (noteId: string) => {\n    return {\n      payload: {\n        selectedNoteId: noteId,\n      },\n    };\n  }\n);\n\nexport const fetchNoteThunk = createAsyncThunk(\n  'notes/note',\n  async (noteId: string) => {\n    console.log('fetchNote', noteId);\n    return await getNoteByNoteId(noteId);\n  }\n);\n\nexport const fetchNotes = createAsyncThunk('notes/fetch', async (thunkAPI) => {\n  return await getNotes();\n});\n\nexport const deleteNoteThunk = createAsyncThunk(\n  'notes/delete',\n  async (noteId: string) => {\n    console.log('deleteNote new');\n    return await deleteNote(noteId);\n  }\n);\n\nexport const createNoteThunk = createAsyncThunk(\n  'notes/create',\n  async (createNoteDTO: CreateNoteDTO) => {\n    console.log('createNoteThunk', createNoteDTO);\n    return await createNote(createNoteDTO);\n  }\n);\n\nexport const updateNoteThunk = createAsyncThunk(\n  'notes/update',\n  async ({ noteId, updateNoteDTO: UpdateNoteDTO, serverSync }: any) => {\n    console.log('updateNoteThunk', noteId, UpdateNoteDTO, serverSync);\n    if (serverSync) {\n      return await updateNote(noteId, UpdateNoteDTO);\n    } else {\n      var noteDetailResultPromise: Promise<NoteDetailResult> = new Promise(\n        (resolve, reject) => {\n          note: UpdateNoteDTO;\n        }\n      );\n      return noteDetailResultPromise;\n    }\n  }\n);\n\nconst notes = createSlice({\n  name: 'notes',\n  initialState: initialNotesState,\n  extraReducers: (builder) => {\n    builder\n      // setSelectedNoteId ------------------\n      .addCase(setSelectedNoteId, (state, action) => {\n        console.log('setSelectedNoteId', action);\n        console.log(\n          'action.payload.selectedNoteId',\n          action.payload.selectedNoteId\n        );\n\n        state.selectedNoteId = action.payload.selectedNoteId;\n      })\n\n      // fetchNote ------------------\n      .addCase(fetchNoteThunk.pending, (state, action) => {\n        console.log('fetchNote.pending');\n        state.error = null;\n\n        const noteId = action.meta.arg;\n        const note = state.notesCache[noteId];\n        const newNotes = { ...state.notes, [noteId]: note };\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(fetchNoteThunk.fulfilled, (state, action) => {\n        console.log('fetchNote.fulfilled', state, action);\n        const noteId = action.meta.arg;\n        const note = action.payload.note;\n        const newNotes = { ...state.notes, [noteId]: note };\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(fetchNoteThunk.rejected, (state, action) => {\n        console.log('# fetchNote.rejected', state, action);\n\n        // TODO: Need fallback to this optimistic rendering\n        // state.isLoading = false;\n        // state.error = action.error.message;\n      })\n\n      // fetchNotes ----------------------\n      .addCase(fetchNotes.pending, (state, action) => {\n        console.log('# fetchNotes.pending', state, action);\n\n        if (Object.keys(state.notes).length === 0) {\n          state.isLoading = true;\n        }\n        state.error = null;\n      })\n      .addCase(fetchNotes.fulfilled, (state, action) => {\n        console.log('# fetchNotes.fulfilled', state, action);\n\n        state.isLoading = false;\n        state.error = null;\n        var notes = action.payload.notes;\n        state.notes = notes;\n        state.notesCache = notes;\n      })\n      .addCase(fetchNotes.rejected, (state, action) => {\n        console.log('# fetchNotes.rejected', state, action);\n\n        state.isLoading = false;\n        // state.error = action.error.message;\n      })\n\n      // createNote ----------------------\n      .addCase(createNoteThunk.pending, (state, action) => {\n        console.log('createNoteThunk.pending', state, action);\n\n        // 02\n        // const noteIdTemp = 'temp-' + action.meta.requestId;\n        // const newNote = {\n        //   ...action.meta.arg,\n        //   id: noteIdTemp,\n        //   createDate: new Date(),\n        //   updateDate: new Date(),\n        // };\n        // const newNotes = { ...state.notes, [noteIdTemp]: newNote };\n        // state.notes = newNotes;\n        // state.notesCache = newNotes;\n      })\n      .addCase(createNoteThunk.fulfilled, (state, action) => {\n        console.log('createNoteThunk.fulfilled', state, action);\n\n        // 01\n        // const noteIdTemp = 'temp-' + action.meta.requestId;\n        // const newNote = action.payload.note;\n        // const newNotes = { ...state.notes, [noteIdTemp]: newNote };\n\n        // state.notes = newNotes;\n        // state.notesCache = newNotes;\n\n        // 02\n        // const noteIdTemp = 'temp-' + action.meta.requestId;\n        // const newNotesA = { ...state.notes };\n        // delete newNotesA[noteIdTemp];\n\n        // const newNote = action.payload.note;\n        // const newNotes = { ...newNotesA, [newNote.id]: newNote };\n\n        // state.notes = newNotes;\n        // state.notesCache = newNotes;\n\n        const newNote = action.payload.note;\n        const newNotes = { ...state.notes, [newNote.id]: newNote };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n        state.selectedNoteId = newNote.id;\n      })\n      .addCase(createNoteThunk.rejected, (state, action) => {\n        console.log('createNoteThunk.rejected', state, action);\n\n        // Rollback delete action with note from cache\n        // TODO: Display error to user (notification)\n        const noteId = 99999999999;\n        const newNotes = { ...state.notes };\n        delete newNotes[noteId];\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n\n      // updateNote ----------------------\n      .addCase(updateNoteThunk.pending, (state, action) => {\n        console.log('updateNoteThunk.pending', state, action);\n\n        // Optimistic rendering\n        const noteId = action.meta.arg.noteId;\n        const note = state.notes[noteId];\n        const newNote = {\n          ...note,\n          ...action.meta.arg.updateNoteDTO,\n          noteId: noteId,\n        }; // TODO: add types\n        const newNotes = { ...state.notes, [noteId]: newNote };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(updateNoteThunk.fulfilled, (state, action) => {\n        console.log('updateNoteThunk.fulfilled', state, action);\n\n        const noteId = action.payload.note.id;\n        const newNotes = { ...state.notes, [noteId]: action.payload.note };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(updateNoteThunk.rejected, (state, action) => {\n        console.log('updateNoteThunk.rejected', state, action);\n\n        // Rollback delete action with note from cache\n        // TODO: Display error to user (notification)\n        const noteId = action.meta.arg.noteId;\n        const noteCached = state.notesCache[noteId];\n        const newNotes = { ...state.notes, [noteId]: noteCached };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n\n      // deleteNote ----------------------\n      .addCase(deleteNoteThunk.pending, (state, action) => {\n        console.log('deleteNoteThunk.pending', state, action);\n\n        const noteId = action.meta.arg;\n        const newNotes = { ...state.notes };\n        delete newNotes[noteId];\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      })\n      .addCase(deleteNoteThunk.fulfilled, (state, action) => {\n        console.log('deleteNoteThunk.fulfilled', state, action);\n\n        // return state;\n      })\n      .addCase(deleteNoteThunk.rejected, (state, action) => {\n        console.log('deletNoteThunk.rejected', state, action);\n\n        // Rollback delete action with note from cache\n        // TODO: Display error to user (notification)\n        const noteId = action.meta.arg;\n        const noteCached = state.notesCache[noteId];\n        const newNotes = { ...state.notes, [noteId]: noteCached };\n\n        state.notes = newNotes;\n        state.notesCache = newNotes;\n      });\n  },\n  reducers: {},\n});\n\nexport default notes.reducer;\n","export const hashCode = (str) => {\n  var hash = 0,\n    i,\n    chr;\n  if (str.length === 0) return hash;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n","import { createTag, deleteTag, getTags } from '../../api/notizenAPI';\nimport {\n  Tags,\n  Mode,\n  Tag,\n  createTagDto,\n} from '../../interfaces/INote.interface';\nimport { createAsyncThunk, createSlice, createAction } from '@reduxjs/toolkit';\nimport { updateTag } from './../../api/notizenAPI';\nimport { hashCode } from '../../app/utils';\n\ninterface TagsState {\n  isLoading: boolean;\n  error: string | null;\n  tags: Tags;\n  tagsCache: Tags;\n  selectedTagId: number;\n  mode: Mode;\n  deleteModeActive: boolean; // TODO: Remove use mode\n  editModeActive: boolean; // TODO: Remove use mode\n}\n\nconst initialTagsState: TagsState = {\n  error: null,\n  isLoading: false,\n  selectedTagId: null,\n  tags: null,\n  tagsCache: null,\n  deleteModeActive: false,\n  editModeActive: false,\n  mode: Mode.Default,\n};\n\nexport const fetchTags = createAsyncThunk('tags/fetch', async () => {\n  console.log('fetchTags thunk');\n  return await getTags();\n});\n\nexport const setTagModeAction = createAction(\n  'tags/setTagModeAction',\n  (tag: Tag, mode: Mode) => {\n    console.log('setTagMode action');\n    const updatedTag: Tag = { ...tag, mode: mode };\n    return {\n      payload: {\n        tag: updatedTag,\n      },\n    };\n  }\n);\n\nexport const setMode = createAction('tags/setMode', (mode: Mode) => {\n  return {\n    payload: {\n      mode: mode,\n    },\n  };\n});\n\nexport const updateTagLocal = createAction('tags/updateLocal', (tag: Tag) => {\n  return {\n    payload: {\n      tag: tag,\n    },\n  };\n});\n\nexport const resetUpdateTag = createAction(\n  'tags/resetUpdateLocal',\n  (tagId: Number) => {\n    return {\n      payload: {\n        tagId: tagId,\n      },\n    };\n  }\n);\n\nexport const createTagAction = createAsyncThunk(\n  'tags/create',\n  async (createTagDto: createTagDto) => {\n    return await createTag(createTagDto);\n  }\n);\n\nexport const updateTagAction = createAsyncThunk(\n  'tags/update',\n  async ({ tagId, updateTagDto: updateTagDto }: any) => {\n    console.log('updateTagAction');\n    return await updateTag(tagId, updateTagDto);\n  }\n);\n\nexport const deleteTagAction = createAsyncThunk(\n  'tags/delete',\n  async (tagId: number) => {\n    return await deleteTag(tagId);\n  }\n);\n\nexport const createTagAndEditAction = (dispatch) => {\n  console.log('createTagAndEditAction');\n  const createTagDto: createTagDto = {\n    name: 'Mon tag',\n  };\n  // TODO: Use of any type because we need to set a special dispatch Type to this action, this is not trivial.\n  // @see https://github.com/reduxjs/redux-toolkit/issues/849\n  // https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n  const actionThunk: any = dispatch(createTagAction(createTagDto));\n  actionThunk.then((action) => {\n    console.log('THEN', action);\n    if (!action.error) {\n      const tag = action.payload.tag;\n      dispatch(setTagModeAction(tag, Mode.Edit));\n    } else {\n      console.warn('err', action.error);\n      // TODO: Throw user message\n    }\n  });\n};\n\n\nconst tags = createSlice({\n  name: 'notes',\n  initialState: initialTagsState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchTags.pending, (state, action) => {\n        console.log('fetchTags.pending', action);\n      })\n      .addCase(fetchTags.fulfilled, (state, action) => {\n        console.log('fetchTags.fulfilled', action);\n\n        const tags = action.payload.tags;\n        state.tags = tags;\n        state.tagsCache = tags;\n      })\n      .addCase(createTagAction.pending, (state, action) => {\n        console.log('createTagAction.pending', action);\n\n        // Optimistic create\n        const requestId = action.meta.requestId;\n        const tempTagId = hashCode(requestId);\n        const createTagDto = action.meta.arg;\n        const tag: Tag = {\n          id: tempTagId,\n          createDate: new Date(),\n          updateDate: new Date(),\n          isActive: false,\n          mode: Mode.Default,\n          name: createTagDto.name,\n        };\n        console.log('tempTagId', tempTagId);\n\n        state.tags[tempTagId] = tag;\n      })\n      .addCase(createTagAction.fulfilled, (state, action) => {\n        console.log('createTagAction.fulfilled', action);\n\n        // Remove temp Tag\n        const requestId = action.meta.requestId;\n        const tempTagId = hashCode(requestId);\n        // console.log('tempTagId', tempTagId);\n        // delete state.tags[tempTagId];\n\n        // TODO: Cannot create two Tag with the same name,\n        // this should be handled in the backend\n        const acc = {};\n        const tags = Object.keys(state.tags).reduce((acc, k) => {\n          if (k && Number(k) != tempTagId) {\n            acc[k] = state.tags[k];\n          }\n          return acc;\n        }, acc);\n        state.tags = tags;\n        state.tagsCache = tags;\n\n        // TODO: api should always return a complete Tag. This\n        // is not the case actually, so here is a test.\n        let success = action.payload.tag.id !== null;\n        if (success) {\n          const tag = action.payload.tag;\n          const tagId = tag.id;\n          state.tags[tagId] = tag;\n          state.tagsCache[tagId] = tag;\n\n          // const dispatch = useDispatch();\n          // dispatch(setMode(tag, Mode.Edit));\n        } else {\n          // id is not returned, maybe because the tag already exist\n        }\n      })\n      .addCase(createTagAction.rejected, (state, action) => {\n        console.log('createTagAction.rejected', action);\n\n        // Rollback optimistic create\n        // TODO: Display error to user (notification)\n        const requestId = action.meta.requestId;\n        const tagId = hashCode(requestId);\n        delete state.tags[tagId];\n      })\n      .addCase(resetUpdateTag, (state, action) => {\n        console.log('resetUpdateTag', action);\n\n        const tagId = String(action.payload.tagId);\n        const tag = state.tagsCache[tagId];\n        state.tags[tagId] = tag;\n        state.tagsCache[tagId] = tag;\n      })\n      .addCase(updateTagLocal, (state, action) => {\n        console.log('updateTagLocal', action);\n\n        const tag = action.payload.tag;\n        state.tags[tag.id] = action.payload.tag;\n      })\n      .addCase(updateTagAction.pending, (state, action) => {\n        console.log('updateTagAction.pending', action);\n\n        // Optimistic update\n        const tagId = action.meta.arg.tagId;\n        const tag = state.tags[tagId];\n        const updateTagDto = action.meta.arg.updateTagDto;\n        const newTag = { ...tag, updateTagDto, mode: Mode.Default };\n\n        state.tags[tag.id] = newTag;\n      })\n      .addCase(updateTagAction.fulfilled, (state, action) => {\n        console.log('updateTagAction.fulfilled', action);\n        const tag = action.payload.tag;\n        state.tags[tag.id] = tag;\n        state.tagsCache[tag.id] = tag;\n      })\n      .addCase(updateTagAction.rejected, (state, action) => {\n        console.log('updateTagAction.rejected', action);\n\n        // Rollback optimistic update when failure\n        // TODO: Display error to user (notification)\n        const tagId = action.meta.arg.tagId;\n        const tag = state.tagsCache[tagId];\n        state.tags[tagId] = tag;\n      })\n      .addCase(deleteTagAction.pending, (state, action) => {\n        console.log('deleteTagAction.pending', action);\n\n        const tagId = action.meta.arg;\n        const newTags = { ...state.tags };\n        delete newTags[tagId];\n        state.deleteModeActive = false;\n        state.tags = newTags;\n      })\n      .addCase(deleteTagAction.fulfilled, (state, action) => {\n        console.log('deleteTagAction.fulfilled', action);\n        state.tagsCache = { ...state.tags };\n      })\n      .addCase(deleteTagAction.rejected, (state, action) => {\n        console.log('deleteTagAction.rejected', action);\n\n        const tagId = action.meta.arg;\n        const tag = state.tagsCache[tagId];\n        state.tags[tagId] = tag;\n      })\n      .addCase(setMode, (state, action) => {\n        console.log('setMode', action);\n        state.mode = action.payload.mode;\n      })\n      .addCase(setTagModeAction, (state, action) => {\n        console.log('setMode', action);\n        const tag = action.payload.tag;\n        state.tags[tag.id] = action.payload.tag;\n      });\n  },\n});\n\nexport default tags.reducer;\nfunction dispatch(arg0: { payload: { tag: Tag }; type: 'tags/setMode' }) {\n  throw new Error('Function not implemented.');\n}\n","import { combineReducers } from '@reduxjs/toolkit';\nimport notesReducer from '../features/note/noteListSlice';\nimport tagsReducer from './../features/tags/TagsSlice'; // TODO: case => tagsSlice\n\nconst rootReducer = combineReducers({\n  notes: notesReducer,\n  tags: tagsReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport rootReducer, { RootState } from './rootReducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst debug = false;\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (debug) console.log('### 01');\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if (true) {\n    if (debug) console.log('### 02 prod && serviceWOrker');\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      if (debug) console.warn('### origin');\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      if (debug) console.log('### on load');\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swUrl = `file:///Users/willahh/www/projects/notizen/frontend/web/src/serviceWorker.js`;\n      if (debug) console.log('### swUrl', swUrl);\n\n      if (isLocalhost) {\n        if (debug) console.log('### isLocalhost');\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          if (debug) console.log('### navigator.serviceWorker.ready');\n          if (debug)\n            console.log(\n              '#### This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n        });\n      } else {\n        if (debug) console.log('### not localhost');\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    if (debug)\n      console.warn(\n        '### process.env.NODE_ENV === production && serviceWorker in navigator'\n      );\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  if (debug) console.log('### registerValidSW', swUrl, config);\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      if (debug) console.log('### then registration');\n      registration.onupdatefound = () => {\n        if (debug) console.log('### registration.onupdatefound');\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              if (debug)\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              if (debug) console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      if (debug)\n        console.error('### Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  if (debug) console.log('### checkValidServiceWorker', swUrl, config);\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      if (debug) console.log('### response fetch');\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (debug)\n        console.log(\n          '### contentType, response.status',\n          contentType,\n          response.status\n        );\n      if (debug)\n        console.log(\n          '### contentType.indexOf(javascript)',\n          contentType.indexOf('javascript')\n        );\n      if (false) {\n        // (\n        //   response.status === 404 ||\n        //   (contentType != null && contentType.indexOf('javascript') === -1)\n        // )\n        if (debug)\n          console.warn(\n            '### No service worker found. Probably a different app. Reload the page.'\n          );\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        if (debug)\n          console.log('### // Service worker found. Proceed as normal.');\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      if (debug)\n        console.log(\n          '### No internet connection found. App is running in offline mode.'\n        );\n      if (debug)\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        if (debug) console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n// import { useSpring, animated } from 'react-spring';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  deleteNoteThunk,\n  setSelectedNoteId,\n} from '../features/note/noteListSlice';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { JsxElement } from 'typescript';\n// import TransitionGroup from 'react-transition-group/TransitionGroup';\n// import ReactTransitionGroup from 'react/lib/ReactTransitionGroup';\n\n// TODO: Share with INote (and with back Note)\ninterface INoteItemProps {\n  id: string;\n  title: string | undefined;\n  text: string | undefined;\n  tags: string[];\n  isSelected: boolean;\n}\nfunction truncateString(str: string, num: number) {\n  if (str.length <= num) {\n    return str;\n  }\n  return str.slice(0, num) + '...';\n}\n\nconst NoteItemThumb: React.FC<INoteItemProps> = ({ id, text, title, tags }) => {\n  console.log('NoteItemThumb', id);\n\n  const dispatch = useDispatch();\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n  const isSelected = id === selectedNoteId;\n\n  let className = 'relative py-5 px-4 bg-white dark:bg-black';\n  if (isSelected) {\n    className += ' border-l-4 border-indigo-700';\n  } else {\n    className += ' border-white dark:border-black';\n  }\n  const btnClassName =\n    'relative inline-flex items-center p-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-md bg-white dark:bg-black dark:border-gray-800';\n\n  const tagType = Math.round(Math.random() * 5);\n  let tagColorClassName = ' text-green-800 bg-green-100';\n  switch (tagType) {\n    case 0:\n      tagColorClassName = ' text-red-800 bg-red-100';\n      break;\n    case 1:\n      tagColorClassName = ' text-yellow-800 bg-yellow-100';\n      break;\n    case 2:\n      tagColorClassName = ' text-blue-800 bg-blue-100';\n      break;\n    case 3:\n      tagColorClassName = ' text-indigo-800 bg-indigo-100';\n      break;\n    case 4:\n      tagColorClassName = ' text-purple-800 bg-purple-100';\n      break;\n  }\n  return (\n    <li className=\"w-52 h-52 overflow-hidden border border-gray-200 dark:border-gray-700 rounded-md p-4\">\n      <div className=\"flex flex-col h-full\">\n        <div className=\"relative\">\n          <span className=\"absolute right-2 top-2 flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full\">\n            Pin\n          </span>\n\n          <h3\n            className=\"text-gray-900 dark:text-gray-50\"\n            style={{ fontSize: 'xx-small' }}\n          >\n            {title}\n          </h3>\n          <div\n            className=\"text-gray-300 dark:text-gray-700\"\n            style={{ fontSize: 'xx-small' }}\n          >\n            {text}\n          </div>\n        </div>\n        <div className=\"h-10\">\n          <span\n            className={\n              'flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full' +\n              tagColorClassName\n            }\n          >\n            {tags}\n          </span>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport { NoteItemThumb };\n\n// import React from 'react';\n// // import { useSpring, animated } from 'react-spring';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { RootState } from '../app/rootReducer';\n// import {\n//   deleteNoteThunk,\n//   setSelectedNoteId,\n// } from '../features/note/noteListSlice';\n// import { RouteComponentProps, withRouter } from 'react-router-dom';\n// import { JsxElement } from 'typescript';\n// // import TransitionGroup from 'react-transition-group/TransitionGroup';\n// // import ReactTransitionGroup from 'react/lib/ReactTransitionGroup';\n\n// // TODO: Share with INote (and with back Note)\n// interface INoteItemProps {\n//   id: string;\n//   title: string | undefined;\n//   text: string | undefined;\n//   tags: string[];\n//   isSelected: boolean;\n// }\n// function truncateString(str: string, num: number) {\n//   if (str.length <= num) {\n//     return str;\n//   }\n//   return str.slice(0, num) + '...';\n// }\n\n// const NoteItemThumb: React.FC<INoteItemProps> = ({ id, text, title, tags }) => {\n//   console.log('NoteItemThumb', id);\n\n//   const dispatch = useDispatch();\n//   const selectedNoteId = useSelector(\n//     (state: RootState) => state.notes.selectedNoteId\n//   );\n//   const isSelected = id === selectedNoteId;\n\n//   let className = 'relative py-5 px-4 bg-white dark:bg-black';\n//   if (isSelected) {\n//     className += ' border-l-4 border-indigo-700';\n//   } else {\n//     className += ' border-white dark:border-black';\n//   }\n//   const btnClassName =\n//     'relative inline-flex items-center p-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-md bg-white dark:bg-black dark:border-gray-800';\n\n//   const tagType = Math.round(Math.random() * 5);\n//   let tagColorClassName = ' text-green-800 bg-green-100';\n//   switch (tagType) {\n//     case 0:\n//       tagColorClassName = ' text-red-800 bg-red-100';\n//       break;\n//     case 1:\n//       tagColorClassName = ' text-yellow-800 bg-yellow-100';\n//       break;\n//     case 2:\n//       tagColorClassName = ' text-blue-800 bg-blue-100';\n//       break;\n//     case 3:\n//       tagColorClassName = ' text-indigo-800 bg-indigo-100';\n//       break;\n//     case 4:\n//       tagColorClassName = ' text-purple-800 bg-purple-100';\n//       break;\n//   }\n//   return (\n//     <li className=\"col-span-1 bg-white dark:bg-black rounded-lg shadow divide-y divide-gray-200 dark:divide-gray-700\">\n//       <div className=\"w-full flex items-center justify-between p-6 space-x-6\">\n//         <div className=\"flex-1 \">\n//           <div className=\"flex items-center space-x-3\">\n//             <h3 className=\"text-gray-900 dark:text-gray-50 text-sm font-medium \">\n//               {title}\n//             </h3>\n//             <span\n//               className={\n//                 'flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full' +\n//                 tagColorClassName\n//               }\n//             >\n//               {tags}\n//             </span>\n//           </div>\n//           <p className=\"mt-1 text-gray-500 text-sm \">{text}</p>\n//         </div>\n//       </div>\n//       <div>\n//         <div className=\"-mt-px flex divide-x divide-gray-200 dark:divide-gray-700\">\n//           <div className=\"w-0 flex-1 flex\">\n//             <a\n//               href=\"#\"\n//               className=\"relative -mr-px w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-bl-lg hover:text-gray-500\"\n//             >\n//               {/* Heroicon name: solid/mail */}\n//               <svg\n//                 className=\"w-5 h-5 text-gray-400\"\n//                 xmlns=\"http://www.w3.org/2000/svg\"\n//                 viewBox=\"0 0 20 20\"\n//                 fill=\"currentColor\"\n//                 aria-hidden=\"true\"\n//               >\n//                 <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n//                 <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n//               </svg>\n//               <span className=\"ml-3\">Email</span>\n//             </a>\n//           </div>\n//           <div className=\"-ml-px w-0 flex-1 flex\">\n//             <a\n//               href=\"#\"\n//               className=\"relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-br-lg hover:text-gray-500\"\n//             >\n//               {/* Heroicon name: solid/phone */}\n//               <svg\n//                 className=\"w-5 h-5 text-gray-400\"\n//                 xmlns=\"http://www.w3.org/2000/svg\"\n//                 viewBox=\"0 0 20 20\"\n//                 fill=\"currentColor\"\n//                 aria-hidden=\"true\"\n//               >\n//                 <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\n//               </svg>\n//               <span className=\"ml-3\">Call</span>\n//             </a>\n//           </div>\n//           <div className=\"-ml-px w-0 flex-1 flex\">\n//             <a\n//               href=\"#\"\n//               className=\"relative w-0 flex-1 inline-flex items-center justify-center py-4 text-sm text-gray-700 font-medium border border-transparent rounded-br-lg hover:text-gray-500\"\n//             >\n//               {/* Heroicon name: solid/phone */}\n//               <svg\n//                 className=\"w-5 h-5 text-gray-400\"\n//                 xmlns=\"http://www.w3.org/2000/svg\"\n//                 fill=\"none\"\n//                 viewBox=\"0 0 24 24\"\n//                 stroke=\"currentColor\"\n//               >\n//                 <path\n//                   strokeLinecap=\"round\"\n//                   strokeLinejoin=\"round\"\n//                   strokeWidth={2}\n//                   d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n//                 />\n//                 <path\n//                   strokeLinecap=\"round\"\n//                   strokeLinejoin=\"round\"\n//                   strokeWidth={2}\n//                   d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\n//                 />\n//               </svg>\n\n//               <span className=\"ml-3\">Pin</span>\n//             </a>\n//           </div>\n//         </div>\n//       </div>\n//     </li>\n//   );\n\n// };\n\n// export { NoteItemThumb };\n","import React from 'react';\n\nexport type INoteFilterProps = {};\n\nconst NoteFilter: React.FC<INoteFilterProps> = ({}) => {\n  return (\n    <div className=\"flex-shrink-0 h-16 border-b-1 border-gray-200 bg-white dark:bg-black dark:border-gray-800\">\n      <div className=\"h-16 flex flex-col justify-center\">\n        <div className=\"max-w-2xl relative text-gray-400 focus-within:text-gray-500\">\n          <label htmlFor=\"search\" className=\"sr-only\">\n            Search in notes\n          </label>\n          <input\n            id=\"search\"\n            type=\"search\"\n            placeholder=\"Search in notes\"\n            className=\"block w-full border-transparent pl-12 placeholder-gray-500 focus:border-transparent sm:text-sm focus:ring-0 dark:bg-black\"\n          />\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center justify-center pl-4\">\n            <svg\n              className=\"h-5 w-5\"\n              x-description=\"Heroicon name: solid/search\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { NoteFilter };\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { Tag, Mode, updateTagDto } from '../../interfaces/INote.interface';\nimport {\n  deleteTagAction,\n  resetUpdateTag,\n  setTagModeAction,\n  updateTagAction,\n  updateTagLocal,\n} from './TagsSlice';\n\ninterface TagProps {\n  tag: Tag;\n  deleteModeActive: boolean;\n  mode: Mode;\n}\n\nconst TagComponent: React.FC<TagProps> = ({ tag, mode, deleteModeActive }) => {\n  console.log('TagComponent cmp', deleteModeActive);\n\n  var { name } = tag;\n  const tagMode = tag.mode;\n  const dispatch = useDispatch();\n  console.log('mode', mode);\n\n  let tagComponent = null;\n  switch (tagMode) {\n    case Mode.Default:\n    default:\n      tagComponent = (\n        <a\n          href=\"#\"\n          className={\n            'h-full text-gray-900 group flex items-center text-sm font-normal rounded-md select-none' +\n            (false\n              ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n              : ' dark:text-gray-500')\n          }\n          onDoubleClick={() => {\n            if (mode === Mode.Edit) {\n              dispatch(setTagModeAction(tag, Mode.Edit));\n            }\n          }}\n        >\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <span className=\"truncate w-full\">{name}</span>\n          {mode === Mode.Edit && (\n            <span className=\"inline-flex\">\n              <button\n                title=\"Edit\"\n                className=\"ml-2\"\n                onClick={() => {\n                  dispatch(setTagModeAction(tag, Mode.Edit));\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  className=\"w-3 dark:text-gray-500\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"\n                  />\n                </svg>\n              </button>\n              <button\n                title=\"Delete\"\n                className=\"ml-2\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  console.log('click delete button');\n\n                  dispatch(setTagModeAction(tag, Mode.Delete));\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  className=\"w-3 dark:text-gray-500\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                  />\n                </svg>\n              </button>\n            </span>\n          )}\n        </a>\n      );\n      break;\n    case Mode.Edit:\n      tagComponent = (\n        <a\n          href=\"#\"\n          className={\n            'h-full text-gray-900 group flex items-center text-sm font-normal rounded-md select-none' +\n            (false\n              ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n              : ' dark:text-gray-500')\n          }\n        >\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <input\n            type=\"text\"\n            className=\"mt-1 block w-full rounded-md shadow-sm py-1 px-2 order bg-white dark:bg-black border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-sm\"\n            value={name}\n            autoFocus\n            onChange={(e) => {\n              const updatedTag: Tag = { ...tag, name: e.target.value };\n              dispatch(updateTagLocal(updatedTag));\n            }}\n            onBlur={(e) => {\n              const tagId = tag.id;\n              const updateTagDto: updateTagDto = {\n                name: e.target.value,\n              };\n              dispatch(updateTagAction({ tagId, updateTagDto }));\n            }}\n            onKeyDown={(e) => {\n              if (e.keyCode == 27) {\n                // escape\n                const tagId = tag.id;\n                dispatch(resetUpdateTag(tagId));\n              } else if (e.keyCode == 13) {\n                // enter\n                const tagId = tag.id;\n                const updateTagDto: updateTagDto = {\n                  name: e.target.value,\n                };\n                dispatch(updateTagAction({ tagId, updateTagDto }));\n              }\n            }}\n          ></input>\n        </a>\n      );\n      break;\n    case Mode.Delete:\n      tagComponent = (\n        <div\n          className={\n            'h-full text-gray-900 group flex items-center text-sm font-normal rounded-md select-none' +\n            (false\n              ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n              : ' dark:text-gray-500')\n          }\n        >\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <span className=\"flex align-middle\">\n            <span className=\"truncate text-xs w-full flex items-center pr-2\">\n              Confirm ?\n            </span>\n            {/* <span className=\"truncate w-full\">{name}</span> */}\n            <span>\n              <span className=\"relative z-0 inline-flex shadow-sm rounded-md \">\n                <button\n                  type=\"button\"\n                  className=\"relative inline-flex items-center px-2 py-1 rounded-l-md text-xs border border-gray-300 bg-white dark:border-gray-600 dark:bg-black text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                  onClick={(e) => {\n                    dispatch(deleteTagAction(tag.id));\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.keyCode == 27) {\n                      // escape\n                      dispatch(resetUpdateTag(tag.id));\n                    } else if (e.keyCode == 13) {\n                      // enter\n                      dispatch(deleteTagAction(tag.id));\n                    }\n                  }}\n                >\n                  Yes\n                </button>\n                <button\n                  autoFocus\n                  type=\"button\"\n                  className=\"-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md text-xs border border-gray-300 bg-white dark:border-gray-600 dark:bg-black text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n                  onClick={() => {\n                    dispatch(resetUpdateTag(tag.id));\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.keyCode == 27) {\n                      // escape\n                      dispatch(resetUpdateTag(tag.id));\n                    } else if (e.keyCode == 13) {\n                      // enter\n                      dispatch(resetUpdateTag(tag.id));\n                    }\n                  }}\n                >\n                  No\n                </button>\n              </span>\n            </span>\n          </span>\n        </div>\n      );\n      break;\n  }\n  return <li className=\"relative overflow-hidden h-10 p-2\">{tagComponent}</li>;\n};\n\nexport { TagComponent };\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { createTagDto, Mode, Tag } from '../../interfaces/INote.interface';\nimport {\n  createTagAction,\n  createTagAndEditAction,\n  fetchTags,\n  setMode,\n} from './TagsSlice';\nimport { TagComponent } from './Tag';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\ninterface ITagsProps {}\n\nconst Tags: React.FC<ITagsProps> = ({}) => {\n  const { error, isLoading, tags } = useSelector(\n    (state: RootState) => state.tags\n  );\n  const deleteModeActive = useSelector(\n    (state: RootState) => state.tags.deleteModeActive\n  );\n  const mode = useSelector((state: RootState) => state.tags.mode);\n  console.log('mode', mode);\n\n  const dispatch = useDispatch();\n\n  // TODO: Mutualize generic vector->map-of-kv\n  const acc: Tag[] = [];\n  const tagsList = Object.keys(tags ? tags : [])\n    .reduce((acc, v) => {\n      if (tags[v]) {\n        acc.push(tags[v]);\n      }\n      return acc;\n    }, acc)\n    .sort((a, b) => {\n      return Number(b.id) - Number(a.id);\n    }); // TODO: refactor sorting\n\n  useEffect(() => {\n    dispatch(fetchTags());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"flex items-center p-2 h-10\">\n        <div className=\"flex w-full items-center text-sm text-gray-700 dark:text-gray-500 font-normal\">\n          <svg\n            className=\"text-gray-500 mr-3 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n            />\n          </svg>\n          <span className=\"truncate w-full\">Tags</span>\n        </div>\n        <button\n          className=\"text-black dark:text-white ml-2\"\n          title=\"Create\"\n          onClick={() => {\n            createTagAndEditAction(dispatch);\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            className=\"w-3 dark:text-gray-500\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </button>\n        {mode === Mode.Default && (\n          <button\n            className=\"text-blac dark:text-white ml-2\"\n            title=\"Edit\"\n            onClick={() => {\n              dispatch(setMode(Mode.Edit));\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              className=\"w-3 dark:text-gray-500\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n              />\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n              />\n            </svg>\n          </button>\n        )}\n        {mode === Mode.Edit && (\n          <button\n            className=\"text-blac dark:text-white ml-2\"\n            title=\"Terminer\"\n            onClick={() => {\n              dispatch(setMode(Mode.Default));\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              className=\"w-3 dark:text-gray-500\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </button>\n        )}\n      </div>\n      <TransitionGroup component=\"ul\" className=\"overflow-auto \" type=\"ul\">\n        {tagsList.map((tag) => (\n          <CSSTransition key={tag.id} timeout={400} classNames=\"tag-item\">\n            <TagComponent\n              tag={tag}\n              mode={mode}\n              deleteModeActive={deleteModeActive}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\n\nexport { Tags };\n","import React from 'react';\n\nexport type IUserProfileCardProps = {};\n\nconst UserProfileCard: React.FC<IUserProfileCardProps> = ({}) => {\n  return ( \n    <div className=\"flex-shrink-0 flex border-t-1 border-gray-200 p-4 dark:border-gray-800\">\n      <a href=\"#\" className=\"flex-shrink-0 w-full group block\">\n        <div className=\"flex items-center\">\n          <div>\n            <img\n              className=\"inline-block h-9 w-9 rounded-full\"\n              src=\"/user_wravel.jpeg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-gray-700 group-hover:text-gray-900 dark:text-gray-300 dark:group-hover:text-gray-100\">\n              William Ravel\n            </p>\n            <p className=\"text-xs font-medium text-gray-500 group-hover:text-gray-700 dark:text-gray-500 dark:group-hover:text-gray-300\">\n              Preferences\n            </p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport { UserProfileCard };\n","import React, { useEffect, useState } from 'react';\nimport { Tags } from '../features/tags/Tags';\nimport { UserProfileCard } from './UserProfileCard';\n\nexport type ISidebarDesktopProps = {};\n\nconst SidebarDesktop: React.FC<ISidebarDesktopProps> = ({}) => {\n  const links = [\n    { label: 'Clojure for the Brave and True', selected: true },\n    { label: 'Personal notes', selected: false },\n    { label: 'Family', selected: false },\n    { label: 'Actuality', selected: false },\n  ];\n\n  const [isColorSchemeDark, setColorSchemeDark] = useState(\n    window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n\n  useEffect(() => {\n    const list = window.matchMedia('(prefers-color-scheme: dark)');\n\n    const handler = (list: any) => {\n      setColorSchemeDark(list.matches);\n    };\n\n    handler(list);\n    list.addListener(handler);\n    return () => {\n      list.removeListener(handler);\n    };\n  }, []);\n\n  const logoSrc = isColorSchemeDark\n    ? require('./../assets/notizen-dark.svg').default\n    : require('./../assets/notizen.svg').default;\n\n  return (\n    <div className=\"hidden lg:flex lg:flex-shrink-0 border-r-1 dark:border-gray-800\">\n      <div className=\"flex flex-col w-44\">\n        <div className=\"flex flex-col h-0 flex-1 bg-white dark:bg-black \">\n          <div className=\"flex-1 h-16 flex flex-col pb-4 overflow-y-auto\">\n            <div className=\"flex items-center h-16 justify-center\">\n              <img src={logoSrc} alt=\"logo\" style={{ width: 120 }} />\n            </div>\n            <nav className=\"mt-2 flex-1\" aria-label=\"Sidebar\">\n              <div className=\"px-2 space-y-1 divide-y divide-y-2 divide-gray:200 dark:divide-gray-800\">\n                <div>\n                <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <span className=\"truncate w-full\">All</span>\n                  </a>\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <span className=\"truncate w-full\">Recent</span>\n                  </a>\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <span className=\"truncate w-full\">Todo</span>\n                  </a>{' '}\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                      />\n                    </svg>\n                    <span className=\"truncate w-full\">Fav</span>\n                  </a>\n                </div>\n                <div>\n                  {links.map(({ label, selected }) => (\n                    <a\n                      key={label}\n                      href=\"#\"\n                      className={\n                        'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                        (selected\n                          ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                          : ' dark:text-gray-500')\n                      }\n                    >\n                      <svg\n                        className=\"text-gray-500 mr-3 h-6 w-6\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        {' '}\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n                        />{' '}\n                      </svg>\n                      <span className=\"truncate w-full\">{label}</span>\n                    </a>\n                  ))}\n                </div>\n                <div>\n                  <Tags />\n                </div>\n                <div>\n                  <a\n                    href=\"#\"\n                    className={\n                      'text-gray-900 group flex items-center px-2 py-2 text-sm font-normal rounded-md' +\n                      (false\n                        ? ' bg-gray-200 dark:bg-gray-800 dark:text-gray-200'\n                        : ' dark:text-gray-500')\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-500 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                      />\n                    </svg>\n                    <span className=\"w-full\">\n                      <span className=\"relative\">\n                        Trash\n                        <span className=\"absolute -top-1 -right-2 block h-2 w-2 rounded-full ring-2 ring-white bg-red-400\"></span>\n                      </span>\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </nav>\n          </div>\n          <UserProfileCard></UserProfileCard>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { SidebarDesktop };\n","import React from 'react';\nimport logo from './../assets/notizen.svg';\n\nexport type ILogoProps = {};\n\nconst Logo: React.FC<ILogoProps> = ({}) => {\n  return (\n    <div className=\"flex-shrink-0 flex items-center px-4\">\n      <img className=\"h-8 w-auto\" src={logo} alt=\"Citizen logo\" />\n    </div>\n  );\n};\n\nexport { Logo };\n","import React from 'react';\n\nexport type IMenuProps = {};\n\nconst Menu: React.FC<IMenuProps> = ({}) => {\n  return (\n    <nav aria-label=\"Sidebar\" className=\"mt-5\">\n      <div className=\"px-2 space-y-1\">\n        <a\n          href=\"#\"\n          className=\"group flex items-center px-2 py-2 text-base font-medium rounded-md bg-gray-100 text-gray-900 dark:bg-gray-900\"\n        >\n          {/* Current: \"text-gray-500\", Default: \"text-gray-400 group-hover:text-gray-500\" */}\n          {/* Heroicon name: outline/home */}\n          <svg\n            className=\"text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n            />\n          </svg>\n          Dashboard\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/calendar */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n            />\n          </svg>\n          Calendar\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/user-group */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"\n            />\n          </svg>\n          Teams\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/search-circle */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          Directory\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/speakerphone */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z\"\n            />\n          </svg>\n          Announcements\n        </a>\n        <a\n          href=\"#\"\n          className=\"text-gray-600 hover:bg-gray-50 hover:text-gray-900 group flex items-center px-2 py-2 text-base font-medium rounded-md\"\n        >\n          {/* Heroicon name: outline/map */}\n          <svg\n            className=\"text-gray-400 group-hover:text-gray-500 mr-4 h-6 w-6\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"\n            />\n          </svg>\n          Office Map\n        </a>\n      </div>\n    </nav>\n  );\n};\n\nexport { Menu };\n","import React from 'react';\n\nexport type ISidebarCloseProps = {};\n\nconst SidebarClose: React.FC<ISidebarCloseProps> = ({}) => {\n  return (\n    <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n      <button\n        type=\"button\"\n        className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n      >\n        <span className=\"sr-only\">Close sidebar</span>\n        {/* Heroicon name: outline/x */}\n        <svg\n          className=\"h-6 w-6 text-white\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport { SidebarClose };\n","import React from 'react';\n\nexport type IUserProfileCardMobileProps = {};\n\nconst UserProfileCardMobile: React.FC<IUserProfileCardMobileProps> = ({}) => {\n  return (\n    <div className=\"flex-shrink-0 flex border-t-1 border-gray-200 p-4 dark:border-gray-800\">\n      <a href=\"#\" className=\"flex-shrink-0 group block\">\n        <div className=\"flex items-center\">\n          <div>\n            <img\n              className=\"inline-block h-10 w-10 rounded-full\"\n              src=\"/user_wravel.jpeg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-base font-medium text-gray-700 group-hover:text-gray-900\">\n              William Ravel\n            </p>\n            <p className=\"text-sm font-medium text-gray-500 group-hover:text-gray-700\">\n              Preferences\n            </p>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport { UserProfileCardMobile };\n","import React from 'react';\nimport { Logo } from './Logo';\nimport { Menu } from './Menu';\nimport { SidebarClose } from './SidebarClose';\nimport { UserProfileCardMobile } from './UserProfileCardMobile';\n\nexport type IMenuMobileProps = {};\n\nconst MenuMobile: React.FC<IMenuMobileProps> = ({}) => {\n  return (\n    <div className=\"sm:hidden\">\n      {/* Off-canvas menu for mobile, show/hide based on off-canvas menu state. */}\n      <div className=\"fixed inset-0 flex z-40\">\n        {/*\n      Off-canvas menu overlay, show/hide based on off-canvas menu state.\n    \n      Entering: \"transition-opacity ease-linear duration-300\"\n        From: \"opacity-0\"\n        To: \"opacity-100\"\n      Leaving: \"transition-opacity ease-linear duration-300\"\n        From: \"opacity-100\"\n        To: \"opacity-0\"\n    */}\n        <div className=\"fixed inset-0\">\n          <div className=\"absolute inset-0 bg-gray-600 opacity-75\" />\n        </div>\n        {/*\n      Off-canvas menu, show/hide based on off-canvas menu state.\n    \n      Entering: \"transition ease-in-out duration-300 transform\"\n        From: \"-translate-x-full\"\n        To: \"translate-x-0\"\n      Leaving: \"transition ease-in-out duration-300 transform\"\n        From: \"translate-x-0\"\n        To: \"-translate-x-full\"\n    */}\n        <div\n          tabIndex={0}\n          className=\"relative flex-1 flex flex-col max-w-xs w-full focus:outline-none bg-white dark:bg-black\"\n        >\n          <SidebarClose></SidebarClose>\n          <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n            <Logo></Logo>\n            <Menu></Menu>\n          </div>\n          <UserProfileCardMobile></UserProfileCardMobile>\n        </div>\n        <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n          {/* Force sidebar to shrink to fit close icon */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { MenuMobile };\n","import React from 'react';\nimport { SidebarDesktop } from '@notizen/frontend-common/components/SidebarDesktop';\nimport { MenuMobile } from '@notizen/frontend-common/components/MenuMobile';\nimport { Main } from '@notizen/frontend-common/components/Main';\n\ninterface IMainTemplateProps {\n  children: React.ReactElement | React.ReactElement[];\n}\n\nconst MainTemplate: React.FC<IMainTemplateProps> = ({ children }) => {\n  return (\n     <div className=\"h-screen flex overflow-hidden bg-white dark:bg-black\">\n      <MenuMobile></MenuMobile>\n      <SidebarDesktop></SidebarDesktop>\n      {children}\n    </div>\n  );\n};\n\nexport default MainTemplate;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, NavLink, useRouteMatch } from 'react-router-dom';\nimport { createNoteThunk } from '../features/note/noteListSlice';\n\nexport type IToolbarProps = {};\n\nconst Toolbar: React.FC<IToolbarProps> = ({}) => {\n  const dispatch = useDispatch();\n  // let match = useRouteMatch();\n  // console.log('#match : ', match);\n\n  return (\n    <div className=\"sticky top-0 h-16 flex-shrink-0 border-b-1 border-gray-200 bg-white dark:bg-black dark:border-gray-800\">\n      {/* Toolbar*/}\n      <div className=\"flex flex-col justify-items-end\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-3 flex justify-between\">\n            {/* Left buttons */}\n            <div>\n              <span className=\"relative z-0 inline-flex shadow-sm rounded-md sm:shadow-none sm:space-x-3\">\n                <span className=\"inline-flex sm:shadow-sm\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      const id = Math.floor(Math.random() * 500);\n                      dispatch(\n                        createNoteThunk({\n                          name: 'Le titre de ma superbe note' + id,\n                          content: 'Ma superbe nouvelle note' + id,\n                        })\n                      );\n                    }}\n                    className=\"relative inline-flex items-center px-4 py-2 rounded-l-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800 dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n                      />\n                    </svg>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path d=\"M21 5V3H3V5H21Z\" fill=\"currentColor\" />\n                      <path d=\"M21 19V21H3V19H21Z\" fill=\"currentColor\" />\n                      <path\n                        fillRule=\"evenodd\"\n                        clipRule=\"evenodd\"\n                        d=\"M12.0001 7.37636C11.602 7.35207 11.2112 7.56874 11.0325 7.95204L7.65154 15.2025C7.41815 15.7031 7.6347 16.2981 8.13522 16.5315C8.63577 16.7649 9.23074 16.5484 9.46417 16.0477L9.95278 14.9999H14.0473L14.5359 16.0477C14.7693 16.5484 15.3643 16.7649 15.8648 16.5315C16.3654 16.2981 16.5819 15.7031 16.3485 15.2025L12.9676 7.95204C12.7888 7.56874 12.3981 7.35207 12.0001 7.37636ZM13.1147 12.9999H10.8854L12.0001 10.6095L13.1147 12.9999Z\"\n                        fill=\"currentColor\"\n                      />\n                    </svg>\n                  </button>\n                  {/* <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-r-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                      />\n                    </svg>\n                  </button> */}\n                </span>\n                <span className=\"hidden lg:flex space-x-3\">\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                      />\n                    </svg>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n                      />\n                    </svg>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"hidden sm:inline-flex -ml-px relative items-center px-4 py-2 rounded-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 bg-white dark:bg-black dark:border-gray-800\"\n                  >\n                    <svg\n                      className=\"h-5 w-5 text-gray-400\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10\"\n                      />\n                    </svg>\n                  </button>\n                </span>\n                <span className=\"-ml-px relative block sm:shadow-sm sm:hidden\">\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border-1 border-gray-300 text-sm font-medium text-gray-900 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-blue-600 sm:rounded-md sm:px-3 bg-white dark:bg-black\"\n                      id=\"menu-3\"\n                      aria-haspopup=\"true\"\n                    >\n                      <span className=\"sr-only sm:hidden\">More</span>\n                      <span className=\"hidden sm:inline\">More</span>\n                      <svg\n                        className=\"h-5 w-5 text-gray-400 sm:ml-2 sm:-mr-1\"\n                        x-description=\"Heroicon name: solid/chevron-down\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        aria-hidden=\"true\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                  <div\n                    className=\"origin-top-right absolute right-0 mt-2 w-36 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none bg-white dark:bg-black\"\n                    role=\"menu\"\n                    aria-orientation=\"vertical\"\n                    aria-labelledby=\"menu-3\"\n                    style={{ display: 'none' }}\n                  >\n                    <div className=\"py-1\">\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Note\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Assign\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Archive\n                      </a>\n                      <a\n                        href=\"#\"\n                        className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900\"\n                        role=\"menuitem\"\n                      >\n                        Move\n                      </a>\n                    </div>\n                  </div>\n                </span>\n                <span className=\"inline-flex sm:shadow-sm\">\n                  <nav>\n                    <NavLink\n                      className=\"-ml-px relative inline-flex items-center px-4 py-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-l-md bg-white dark:bg-black dark:border-gray-800\"\n                      to=\"/note/note-list\"\n                      activeClassName=\"bg-indigo-200 dark:bg-indigo-700\"\n                    >\n                      <svg\n                        className=\"h-5 w-5 text-gray-400\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\n                        />\n                      </svg>\n                    </NavLink>\n                    <NavLink\n                      className=\"-ml-px relative inline-flex items-center px-4 py-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-r-md bg-white dark:bg-black dark:border-gray-800\"\n                      to=\"/note/note-thumb\"\n                      activeClassName=\"bg-indigo-200 dark:bg-indigo-700\"\n                    >\n                      <svg\n                        className=\"h-5 w-5 text-gray-400\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n                        />\n                      </svg>\n                    </NavLink>\n                  </nav>\n                </span>\n              </span>\n            </div>\n            {/* Right buttons */}\n          </div>\n        </div>\n      </div>\n      {/* Message header */}\n    </div>\n  );\n};\n\nexport { Toolbar };\n","import React, { useEffect } from 'react';\nimport { NoteItemThumb } from '../../components/NoteItemThumb';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { fetchNotes } from './noteListSlice';\nimport { NoteFilter } from '../../components/NoteFilter';\nimport { MainArea } from '../../components/MainArea';\nimport { LOCAL_STORAGE_NOTES_KEY } from '../../constants';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from 'react-router-dom';\nimport MainTemplate from '../../components/MainTemplate';\nimport { Toolbar } from '../../components/Toolbar';\nimport { INote } from '../../interfaces/INote.interface';\n\nconst scrollbar = require('smooth-scrollbar-react');\nconst ScrollBar = scrollbar.default;\n\ninterface INoteProps {}\n\nconst NoteThumb: React.FC<INoteProps> = () => {\n  const dispatch = useDispatch();\n  const { error, isLoading, notes } = useSelector(\n    (state: RootState) => state.notes\n  );\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_NOTES_KEY, JSON.stringify(notes));\n  }, [notes]);\n\n  const acc: INote[] = [];\n  const notesList = Object.keys(notes)\n    .reduce((acc, v) => {\n      if (notes[v]) {\n        acc.push(notes[v]);\n      }\n      return acc;\n    }, acc)\n    .sort(({ id: a }, { id: b }) => {\n      return Number(a) - Number(b);\n    });\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  let noteListHtml = null;\n  let match = useRouteMatch();\n\n  if (error) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        {error}\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        Loading\n      </p>\n    );\n  } else {\n    noteListHtml = (\n      /* <ScrollBar damping={0.5} thumbMinSize={20}> */\n      <TransitionGroup\n        component=\"ul\"\n        className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4 p-4\"\n        type=\"ul\"\n      >\n        {notesList.map(({ id, name, content }) => {\n          return (\n            <CSSTransition key={id} timeout={400} classNames=\"item\">\n              <NoteItemThumb\n                key={id}\n                id={id}\n                title={name}\n                tags={['Tag 1']}\n                text={content}\n                isSelected={true}\n              />\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    );\n  }\n\n  return (\n    <MainTemplate>\n      <div className=\"flex w-full flex-col\">\n        <div>\n          <Toolbar />\n          <NoteFilter />\n        </div>\n        <div className=\"flex h-full\">{noteListHtml}</div>\n      </div>\n    </MainTemplate>\n  );\n};\n\nexport { NoteThumb };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  deleteNoteThunk,\n  setSelectedNoteId,\n} from '../features/note/noteListSlice';\n// import TransitionGroup from 'react-transition-group/TransitionGroup';\n// import ReactTransitionGroup from 'react/lib/ReactTransitionGroup';\n\n// TODO: Share with INote (and with backend Note)\ninterface INoteItemProps {\n  id: string;\n  title: string | undefined;\n  text: string | undefined;\n  tags: string[];\n  isSelected: boolean;\n}\nfunction truncateString(str: string, num: number) {\n  if (str.length <= num) {\n    return str;\n  }\n  return str.slice(0, num) + '...';\n}\n\nconst NoteItem: React.FC<INoteItemProps> = ({ id, text, title, tags }) => {\n  const dispatch = useDispatch();\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n  const isSelected = id === selectedNoteId;\n\n  let itemCls =\n    'relative overflow-hidden select-none border-l-4 duration-300 ease-in-out';\n  let itemInnerCls =\n    'relative py-5 px-4 bg-white dark:bg-black duration-300 ease-in-out transition-all';\n  if (isSelected) {\n    itemCls += ' border-indigo-700';\n    itemInnerCls += ' transform left-2';\n  } else {\n    itemCls += ' border-white dark:border-black';\n    itemInnerCls += ' left-0';\n  }\n  const btnClassName =\n    'relative inline-flex items-center p-2 border-1 border-gray-300 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 rounded-md bg-white dark:bg-black dark:border-gray-800';\n\n  return (\n    <li\n      className=\"relative overflow-hidden\"\n      style={{ zIndex: Number(id) }}\n      note-id={id}\n      onClick={() => {\n        dispatch(setSelectedNoteId(id));\n      }}\n    >\n      <div className={itemCls}>\n        <div className={itemInnerCls}>\n          <div className=\"flex justify-between space-x-3\">\n            <div className=\"min-w-0 flex-1\">\n              <a href=\"#\" className=\"block focus:outline-none\">\n                <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                <p className=\"text-sm font-medium truncate text-gray-900 dark:text-gray-200\">\n                  {title}\n                </p>\n                <p className=\"text-sm truncate text-gray-500 dark:text-gray-300\">\n                  {tags}\n                </p>\n              </a>\n            </div>\n            <time\n              dateTime=\"2021-01-27T16:35\"\n              className=\"flex-shrink-0 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300\"\n            >\n              1d ago\n            </time>\n            <button\n              className={btnClassName}\n              onClick={(e) => {\n                console.log('onClick', id);\n                e.stopPropagation();\n                dispatch(deleteNoteThunk(id));\n              }}\n            >\n              <svg\n                className=\"w-4\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                />\n              </svg>\n            </button>\n          </div>\n          <div className=\"mt-1 max-h-10 overflow-hidden\">\n            <p className=\"line-clamp-2 text-sm text-gray-600 dark:text-gray-500\">\n              {text ? truncateString(text, 64) : 'Ma nouvelle note'}\n            </p>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport { NoteItem };\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { CSSTransition, Transition } from 'react-transition-group';\n\ninterface IAreaSecondaryProps {\n  children: ReactElement | ReactElement[];\n}\n\nconst AreaSecondary: React.FC<IAreaSecondaryProps> = ({ children }) => {\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true);\n  }, [inProp]);\n\n  return (\n    <CSSTransition in={inProp} timeout={500} classNames=\"areaSecondary\">\n      <aside className=\"relative flex flex-col flex-shrink-0 w-56 border-r-1 border-gray-200 dark:border-gray-800\">\n        {children}\n      </aside>\n    </CSSTransition>\n  );\n};\n\nexport { AreaSecondary };\n","import React from 'react';\n\nexport type IMainAreaProps = {};\n\nconst MainArea: React.FC<IMainAreaProps> = ({ children }) => {\n  return (\n    <main\n      className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none g-gray-50 dark:bg-gray-900 \"\n      tabIndex={0}\n    >\n      {children}\n    </main>\n  );\n};\n\nexport { MainArea };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createTagAction, createTagAndEditAction, setTagModeAction } from '../features/tags/TagsSlice';\nimport { createTagDto, Mode } from '../interfaces/INote.interface';\n\nexport type INewTagProps = {};\n\nconst NewTag: React.FC<INewTagProps> = ({}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"inline-flex\">\n      <button\n        title=\"New tag\"\n        className=\"inline-flex items-center px-2 py-0.5 rounded text-xs bg-indigo-100 text-indigo-800 dark:bg-gray-800 dark:text-indigo-100\"\n        onClick={() => {\n          createTagAndEditAction(dispatch);\n        }}\n      >\n        <svg\n          className=\"h-2 w-2 text-indigo-400\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          />\n        </svg>\n      </button>\n\n      <div\n        className=\"relative inline-block text-left\"\n        style={{ display: 'none' }}\n      >\n        <div>\n          <button\n            type=\"button\"\n            className=\"inline-flex justify-center w-full rounded-md border shadow-sm px-4 py-2 text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 \n            border-gray-300 bg-white text-gray-700 hover:bg-gray-50 focus:ring-offset-gray-100 focus:ring-indigo-500\n            dark:border-gray-600 dark:bg-black dark:text-gray-200 dark:hover:bg-gray-900 dark:focus:ring-offset-gray-800\n            \"\n            id=\"options-menu\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"true\"\n          >\n            Options\n            <svg\n              className=\"-mr-1 ml-2 h-5 w-5\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        <div\n          className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 dark:bg-black dark:ring-white dark:divide-gray-800\"\n          role=\"menu\"\n          aria-orientation=\"vertical\"\n          aria-labelledby=\"options-menu\"\n        >\n          <div className=\"py-1\">\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Edit\n            </a>\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Duplicate\n            </a>\n          </div>\n          <div className=\"py-1\">\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Archive\n            </a>\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Move\n            </a>\n          </div>\n          <div className=\"py-1\">\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Share\n            </a>\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Add to favorites\n            </a>\n          </div>\n          <div className=\"py-1\">\n            <a\n              href=\"#\"\n              className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900\"\n              role=\"menuitem\"\n            >\n              Delete\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { NewTag };\n","import React, { useEffect, Suspense, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/rootReducer';\nimport {\n  fetchNoteThunk,\n  updateNoteThunk,\n} from '../features/note/noteListSlice';\nimport { UpdateNoteDTO } from '../interfaces/INote.interface';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { NewTag } from './NewTag';\n\nconst scrollbar = require('smooth-scrollbar-react');\nconst ScrollBar = scrollbar.default;\n\ninterface INoteDetailProps {}\n\nconst NoteDetailEdit: React.FC<INoteDetailProps> = ({}) => {\n  console.log('NoteDetailEdit');\n\n  // const delay = 5;\n  const dispatch = useDispatch();\n  const { error, isLoading, notes } = useSelector(\n    (state: RootState) => state.notes\n  );\n  // const [show, setShow] = useState(false);\n  const selectedNoteId = useSelector(\n    (state: RootState) => state.notes.selectedNoteId\n  );\n\n  const contentRef = useRef<HTMLDivElement>(null);\n  // const contentRef2 = React.createRef();\n  const titleRef = useRef<HTMLDivElement>(null);\n\n  const handleContentBlur = (e: React.FocusEvent<HTMLDivElement>) => {\n    const noteId = selectedNoteId;\n    const content = contentRef.current?.innerText;\n    console.log('content', content);\n\n    const updateNoteDTO: UpdateNoteDTO = {\n      content: content,\n    };\n    dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: true }));\n  };\n\n  // const handleContentKeyUp = (e: React.KeyboardEvent) => {\n  //   console.log('key up', e);\n\n  //   const noteId = selectedNoteId;\n  //   const input = e.target as HTMLElement;\n  //   const updateNoteDTO: UpdateNoteDTO = {\n  //     content: input.innerText,\n  //   };\n  //   dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: false }));\n  //   contentRef.current?.focus();\n  // };\n\n  const handleTitleBlur = (e: React.FocusEvent<HTMLDivElement>) => {\n    const noteId = selectedNoteId;\n    const updateNoteDTO: UpdateNoteDTO = {\n      name: titleRef.current?.innerText,\n    };\n    dispatch(updateNoteThunk({ noteId, updateNoteDTO, serverSync: true }));\n  };\n\n  // TODO showLoading\n  const showLoading = true;\n  const note = selectedNoteId ? notes[selectedNoteId] : null;\n\n  useEffect(() => {\n    console.log('#notedetail effect selectedNoteId', selectedNoteId);\n\n    if (selectedNoteId) {\n      dispatch(fetchNoteThunk(selectedNoteId));\n    }\n    // let timer1 = setTimeout(() => setShow(true), 1000);\n    // return () => {\n    //   clearTimeout(timer1);\n    // };\n  }, [dispatch, selectedNoteId]);\n\n  // const [inProp, setInProp] = useState(false);\n\n  if (error) {\n    return (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        {error}\n      </p>\n    );\n  }\n  if (isLoading && showLoading) {\n    return (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        Loading\n      </p>\n    );\n  } else {\n    return (\n      <>\n        {/* <CSSTransition in={selectedNoteId} timeout={400} classNames=\"noteDetail\"> */}\n        {/* <div className=\"relative\"> */}\n        {/* <Suspense fallback={<div>Chargement</div>}> */}\n        {/* <ScrollBar damping={0.5} thumbMinSize={20}> */}\n        <div className=\"flex h-full p-16 base-style bg-gray-50 dark:text-gray-300 dark:bg-gray-900\">\n          {note ? (\n            <div\n              className=\"\"\n              style={{\n                width: '482px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n              }}\n            >\n              <div className=\"flex flex-col space-y-4 sm:space-y-0 sm:flex-row sm:space-x-4 mb-2 select-none\">\n                <span\n                  title=\"fav\"\n                  className=\"inline-flex items-center px-2 py-0.5 first-child:border-r-0 rounded border border-indigo-100 dark:border-indigo-800 text-xs font-medium dark:text-indigo-100\"\n                  style={{ caretColor: '#06afbf' }}\n                >\n                  <svg\n                    className=\"h-3 w-3 text-indigo-400\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n                    />\n                  </svg>\n                </span>\n                <span className=\"inline-flex\">\n                  <span className=\"inline-flex items-center px-2 py-0.5 first-child:border-r-0 rounded rounded-r-none border-r-0 border border-indigo-100 dark:border-indigo-800 text-xs font-medium dark:text-indigo-100\">\n                    <svg\n                      className=\"mr-1.5 h-2 w-2 text-indigo-400\"\n                      fill=\"currentColor\"\n                      viewBox=\"0 0 8 8\"\n                    >\n                      <circle cx=\"4\" cy=\"4\" r=\"3\" />\n                    </svg>\n                    Tag 1\n                  </span>\n                  <span className=\"inline-flex items-center px-2 py-0.5 rounded rounded-l-none border border-indigo-100 dark:border-indigo-800 text-xs font-medium dark:text-indigo-100\">\n                    <svg\n                      className=\"mr-1.5 h-2 w-2 text-indigo-400\"\n                      fill=\"currentColor\"\n                      viewBox=\"0 0 8 8\"\n                    >\n                      <circle cx=\"4\" cy=\"4\" r=\"3\" />\n                    </svg>\n                    Tag 2\n                  </span>\n                </span>\n                <NewTag />\n              </div>\n              <h1\n                className=\"max-w-lg text-justify outline-none\"\n                onBlur={handleTitleBlur}\n                ref={titleRef}\n                contentEditable={true}\n                dangerouslySetInnerHTML={{ __html: note?.name || '' }}\n              ></h1>\n              <div\n                className=\"max-w-lg text-justify outline-none\"\n                onBlur={handleContentBlur}\n                // onKeyUp={handleContentKeyUp}\n                ref={contentRef}\n                contentEditable={true}\n                dangerouslySetInnerHTML={{ __html: note?.content || '' }}\n              ></div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        {/* </ScrollBar> */}\n        {/* </Suspense> */}\n        {/* </div> */}\n        {/* </CSSTransition> */}\n      </>\n    );\n  }\n};\n\nexport { NoteDetailEdit };\n","import React, { useEffect } from 'react';\nimport { NoteItem } from '../../components/NoteItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { fetchNotes } from './noteListSlice';\nimport { AreaSecondary } from '../../components/AreaSecondary';\nimport { NoteFilter } from '../../components/NoteFilter';\nimport { MainArea } from '../../components/MainArea';\nimport { Toolbar } from '../../components/Toolbar';\nimport { NoteDetailEdit } from '../../components/NoteDetailEdit';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { LOCAL_STORAGE_NOTES_KEY } from '../../constants';\nimport MainTemplate from '../../components/MainTemplate';\nimport { INote } from '../../interfaces/INote.interface';\n// const scrollbar = require('smooth-scrollbar-react');\n// const ScrollBar = scrollbar.default;\n\ninterface INoteProps {}\n\nconst NoteList: React.FC<INoteProps> = () => {\n  const dispatch = useDispatch();\n  const { error, isLoading, notes } = useSelector(\n    (state: RootState) => state.notes\n  );\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_NOTES_KEY, JSON.stringify(notes));\n  }, [notes]);\n\n  // TODO: Mutualize generic vector->map-of-kv\n  const acc: INote[] = [];\n  const notesList = Object.keys(notes)\n    .reduce((acc, v) => {\n      if (notes[v]) {\n        acc.push(notes[v]);\n      }\n      return acc;\n    }, acc)\n    .sort((a, b) => {\n      return Number(b.id) - Number(a.id);\n    }); // TODO: refactor sorting\n\n  useEffect(() => {\n    dispatch(fetchNotes());\n  }, [dispatch]);\n\n  let noteListHtml = null;\n  // let match = useRouteMatch();\n\n  if (error) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        {error}\n      </p>\n    );\n  }\n\n  if (isLoading) {\n    noteListHtml = (\n      <p className=\"error text\" style={{ color: '#fff' }}>\n        Loading\n      </p>\n    );\n  } else {\n    noteListHtml = (\n      /* <ScrollBar damping={0.5} thumbMinSize={20}> */\n      <TransitionGroup\n        component=\"ul\"\n        className=\"overflow-auto divide-y-1 divide-gray-200 dark:divide-gray-800\"\n        type=\"ul\"\n      >\n        {notesList.map(({ id, name, content }) => {\n          return (\n            <CSSTransition key={id} timeout={400} classNames=\"item\">\n              <NoteItem\n                key={id}\n                id={id}\n                title={name}\n                tags={['Tag 1']}\n                text={content}\n                isSelected={true}\n              ></NoteItem>\n            </CSSTransition>\n          );\n        })}\n      </TransitionGroup>\n    );\n  }\n\n  return (\n    <MainTemplate>\n      <div className=\"flex w-full flex-col\">\n        <div>\n          <Toolbar />\n        </div>\n        <div className=\"flex h-full\">\n          <AreaSecondary>\n            <NoteFilter />\n            {noteListHtml}\n          </AreaSecondary>\n          <MainArea>\n            <NoteDetailEdit />\n          </MainArea>\n        </div>\n      </div>\n    </MainTemplate>\n  );\n};\n\nexport { NoteList };\n","export default __webpack_public_path__ + \"static/media/notizen-icon.658e43aa.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport loginBackgroundImage from './../../assets/notizen-icon.svg';\n\nexport type IAuthProps = {};\n\nconst Auth: React.FC<IAuthProps> = ({}) => {\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-black flex\">\n      <div className=\"flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24\">\n        <div className=\"mx-auto w-full max-w-sm lg:w-96\">\n          <div>\n            <img\n              className=\"h-12 w-auto\"\n              src={loginBackgroundImage}\n              alt=\"Workflow\"\n            />\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900 dark:text-gray-100\">\n              Sign in to your account\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400max-w\">\n              Or\n              <a\n                href=\"#\"\n                className=\"font-medium text-indigo-600 hover:text-indigo-500 dark:text-indigo-300\"\n              >\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n          <div className=\"mt-8\">\n            <div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-700 dark:text-gray-200\">\n                  Sign in with\n                </p>\n                <div className=\"mt-1 grid grid-cols-3 gap-3\">\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-black text-sm font-medium text-gray-500 hover:bg-gray-50\"\n                    >\n                      <span className=\"sr-only\">Sign in with Facebook</span>\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        aria-hidden=\"true\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </a>\n                  </div>\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm bg-white dark:bg-black text-sm font-medium text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-900\"\n                    >\n                      <span className=\"sr-only\">Sign in with Twitter</span>\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        aria-hidden=\"true\"\n                      >\n                        <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\n                      </svg>\n                    </a>\n                  </div>\n                  <div>\n                    <a\n                      href=\"#\"\n                      className=\"w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm bg-white dark:bg-black text-sm font-medium text-gray-500 hover:bg-gray-50 dark:hover:bg-gray-900\"\n                    >\n                      <span className=\"sr-only\">Sign in with GitHub</span>\n                      <svg\n                        className=\"w-5 h-5\"\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        aria-hidden=\"true\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-6 relative\">\n                <div\n                  className=\"absolute inset-0 flex items-center\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white dark:bg-black text-gray-500\">\n                    Or continue with\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-6\">\n              <form action=\"#\" method=\"POST\" className=\"space-y-6\">\n                <div>\n                  <label\n                    htmlFor=\"email\"\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                  >\n                    Email address\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      required\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-600 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n                  <label\n                    htmlFor=\"password\"\n                    className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                  >\n                    Password\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      autoComplete=\"current-password\"\n                      required\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md shadow-sm placeholder-gray-400 dark:placeholder-gray-600 hodlder-gray focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <input\n                      id=\"remember_me\"\n                      name=\"remember_me\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 text-indigo-600 dark:text-indigo-400 focus:ring-indigo-500 border-gray-300 dark:border-gray-600 rounded\"\n                    />\n                    <label\n                      htmlFor=\"remember_me\"\n                      className=\"ml-2 block text-sm text-gray-900 dark:text-gray-50\"\n                    >\n                      Remember me\n                    </label>\n                  </div>\n                  <div className=\"text-sm\">\n                    <a\n                      href=\"#\"\n                      className=\"font-medium text-indigo-600 dark:text-indigo-400 hover:text-indigo-500\"\n                    >\n                      Forgot your password?\n                    </a>\n                  </div>\n                </div>\n                <div>\n                  <Link to=\"/note\">\n                    <button\n                      type=\"submit\"\n                      className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white dark:text-black bg-indigo-600 dark:bg-indigo-400 hover:bg-indigo-700 dark:hover:bg-indigo-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      Sign in\n                    </button>\n                  </Link>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"hidden lg:block relative w-0 flex-1 dark:bg-indigo-900\">\n        {/* <iframe\n          src=\"https://player.vimeo.com/video/430522320\"\n          width=\"640\"\n          height=\"360\"\n          style={{ width: '158%', height: '100%' }}\n        ></iframe> */}\n        <img\n          className=\"absolute inset-0 h-full w-full object-cover\"\n          style={{ height: '200%' }}\n          src={loginBackgroundImage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { Auth };\n","import React from 'react';\r\nimport { Note } from '@notizen/frontend-common/features/note/Note';\r\nimport { Auth } from '@notizen/frontend-common/features/auth/Auth';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nconst routes = [\r\n  { path: '/', name: 'Home', Component: Auth },\r\n  { path: '/auth', name: 'Auth', Component: Auth },\r\n  { path: '/note', name: 'Note', Component: Note },\r\n];\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"relative\">\r\n        <Router>\r\n          {routes.map(({ path, Component }) => (\r\n            // <Route key={path} exact path={path}>\r\n\r\n            <Route key={path} path={path}>\r\n              {({ match }) => (\r\n                <CSSTransition\r\n                  in={match != null}\r\n                  timeout={400}\r\n                  classNames=\"page\"\r\n                  unmountOnExit\r\n                >\r\n                  <div className=\"page\">\r\n                    <Component />\r\n                  </div>\r\n                </CSSTransition>\r\n              )}\r\n            </Route>\r\n          ))}\r\n        </Router>\r\n      </div>\r\n    </>\r\n\r\n    // <>\r\n    //   <nav>\r\n    //     <ul>\r\n    //       <li>\r\n    //         <Link to=\"/\">Home</Link>\r\n    //       </li>\r\n    //       <li>\r\n    //         <Link to=\"/note\">note</Link>\r\n    //       </li>\r\n    //       <li>\r\n    //         <Link to=\"/note-thumb\">note note-thumb</Link>\r\n    //       </li>\r\n    //       <li>\r\n    //         <Link to=\"/note-lit\">note note-lit</Link>\r\n    //       </li>\r\n    //       <li>\r\n    //         <Link to=\"/auth\">Auth</Link>\r\n    //       </li>\r\n    //     </ul>\r\n    //   </nav>\r\n    //   <div className=\"relative\">\r\n    //     <Route key=\"/auth\" exact path=\"/auth\">\r\n    //     <CSSTransition\r\n    //               in={match != null}\r\n    //               timeout={300}\r\n    //               classNames=\"page\"\r\n    //               unmountOnExit\r\n    //             >\r\n    //       <Auth />\r\n    //       </CSSTransition>\r\n    //     </Route>\r\n    //     <Route key=\"/note\" exact path=\"/note\">\r\n    //       <Note />\r\n    //     </Route>\r\n    //     <Route key=\"/note-thumb\" exact path=\"/note-thumb\">\r\n    //       <NoteThumb />\r\n    //     </Route>\r\n    //     <Route key=\"/note-lit\" exact path=\"/note-lit\">\r\n    //       <NoteLit />\r\n    //     </Route>\r\n    //   </div>\r\n    //   {/* <Switch>\r\n    //     <Route path=\"/auth\">\r\n    //       <Auth />\r\n    //     </Route>\r\n    //     <Route path=\"/note\">\r\n    //       <Note />\r\n    //     </Route>\r\n    //     <Route path=\"/note-thumb\">\r\n    //       <NoteThumb />\r\n    //     </Route>\r\n    //     <Route path=\"/note-lit\">\r\n    //       <NoteLit />\r\n    //     </Route>\r\n    //   </Switch> */}\r\n    // </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect } from 'react';\nimport { NoteItem } from '../../components/NoteItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/rootReducer';\nimport { fetchNotes } from './noteListSlice';\nimport { AreaSecondary } from '../../components/AreaSecondary';\nimport MainTemplate from '../../components/MainTemplate';\nimport { NoteThumb } from '@notizen/frontend-common/features/note/NoteThumb';\nimport { NoteList } from '@notizen/frontend-common/features/note/NoteList';\n// import { NoteLit } from '@notizen/frontend-common/features/note/NoteLit';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Toolbar } from '../../components/Toolbar';\nimport { NoteFilter } from '../../components/NoteFilter';\n\ninterface INoteProps {}\n\nconst Note: React.FC<INoteProps> = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/note\">\n        <NoteList />\n      </Route>\n      <Route exact path=\"/note/note-list\">\n        <NoteList />\n      </Route>\n      <Route exact path=\"/note/note-thumb\">\n        <NoteThumb />\n      </Route>\n    </Switch>\n  );\n};\n\nexport { Note };\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store } from '@notizen/frontend-common/app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker.js';\r\nimport '@notizen/frontend-common/index.css';\r\nimport App from '@notizen/frontend-common/app/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}